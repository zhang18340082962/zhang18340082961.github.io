{"title":"python电影数据分析","uid":"defb5a725379b00e673d55a61c52ceb3","slug":"python电影数据分析","date":"2020-03-11T05:25:31.000Z","updated":"2022-04-03T06:02:27.993Z","comments":true,"path":"api/articles/python电影数据分析.json","keywords":null,"cover":null,"content":"<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.3pbn6ny481hc.png\"\n                     \n                ></p>\n<h1 id=\"一、数据概述\"><a href=\"#一、数据概述\" class=\"headerlink\" title=\"一、数据概述\"></a>一、数据概述</h1><p>id：标识号<br>imdb_id：IMDB 标识号<br>popularity：在 Movie Database 上的相对页面查看次数<br>budget：预算（美元）<br>revenue：收入（美元）<br>original_title：电影名称<br>cast：演员列表，按 | 分隔，最多 5 名演员<br>homepage：电影首页的 URL<br>director：导演列表，按 | 分隔，最多 5 名导演<br>tagline：电影的标语<br>keywords：与电影相关的关键字，按 | 分隔，最多 5 个关键字<br>overview：剧情摘要<br>runtime：电影时长<br>genres：风格列表，按 | 分隔，最多 5 种风格<br>production_companies：制作公司列表，按 | 分隔，最多 5 家公司<br>release_date：首次上映日期<br>vote_count：评分次数<br>vote_average：平均评分<br>based on novel 是否由小说改编</p>\n<h1 id=\"二、提出问题\"><a href=\"#二、提出问题\" class=\"headerlink\" title=\"二、提出问题\"></a>二、提出问题</h1><p>每年上映电影数量、电影总票房表现？<br>电影票房与哪些因素最相关？<br>各类型电影表现？<br>各电影类型之间的关联性<br>原创电影与改编电影有何差异？<br>受众喜好与那些因素有关？电影时长为多少最合适？<br>Universal Pictures与Paramount Pictures两家行业巨头的业绩如何？</p>\n<h1 id=\"三、每年上映电影数量、电影总票房是多少？\"><a href=\"#三、每年上映电影数量、电影总票房是多少？\" class=\"headerlink\" title=\"三、每年上映电影数量、电影总票房是多少？\"></a>三、每年上映电影数量、电影总票房是多少？</h1><p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.6b4rg4rm8f0g.png\"\n                     \n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.2zjbppvcxm2o.png\"\n                     \n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.nkkuasvv4ww.png\"\n                     \n                ></p>\n<p>电影工业在最近三十几年呈现稳步式增长，2014年数量最多。虽然电影数量最近二十年内有3次较大的波动，但电影总票房仍然保持在较高的水准，说明电影市场已经成熟，有固定的消费人群，可见投资电影仍然是很好的投资方式。</p>\n<h1 id=\"四、电影票房与哪些因素最相关？\"><a href=\"#四、电影票房与哪些因素最相关？\" class=\"headerlink\" title=\"四、电影票房与哪些因素最相关？\"></a>四、电影票房与哪些因素最相关？</h1><p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.n21iikmlnb.png\"\n                     \n                ></p>\n<p>由以上可知，电影票房与电影预算（0.73），受欢迎度（0.66），评价次数（0.78）存在强相关。 绘制电影票房与受欢迎度，评价次数，电影预算的相关性散点图及其线性回归线。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.402wi8il56kg.png\"\n                     \n                ></p>\n<p>如图，电影预算、评分基本与电影票房呈正线性相关的关系，这也符合正常经济规律。</p>\n<h1 id=\"五、各类型电影表现？\"><a href=\"#五、各类型电影表现？\" class=\"headerlink\" title=\"五、各类型电影表现？\"></a>五、各类型电影表现？</h1><p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.4yo6dofyk6bk.png\"\n                     \n                ></p>\n<p>约从1992开始，电影市场开始爆发式增长，其中戏剧类（Drama）和喜剧类（Comedy）这两个类型是随时间增长幅度最大的，现在也比较热门。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.6w6fy2r0f75s.png\"\n                     \n                ></p>\n<p>如上图，可见投资一部电影的话，上图中的类型是最好的选择，尤以comedy和drama最佳。那不同类型电影的盈利能力如何呢？</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.1jep74ld6qgw.png\"\n                     \n                ></p>\n<p>电影关键词主要以based on novel（基于小说）、women（女性）、independent film（独立电影）、murder（谋杀）为主</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.64w9itd55j40.png\"\n                     \n                ></p>\n<p>由图可知，平均收益前3的电影类型为：冒险类（Adventure）、科幻类（Fantasy）、动画类（Animation），而外国电影类（Foreign）和电视电影类（TV Movie）有亏损的风险。</p>\n<h1 id=\"六、各电影类型之间关联性\"><a href=\"#六、各电影类型之间关联性\" class=\"headerlink\" title=\"六、各电影类型之间关联性\"></a>六、各电影类型之间关联性</h1><p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.2uu5wutrq6m8.png\"\n                     \n                ></p>\n<p>(Animation)与(Family)、(Adventure, Thriller)与(Action)、(Fantasy) 与(Family)、(Thriller, Drama)与(Crime) 在支持度阈值2.5%，提升度为3 的情况下，表现出较强的关联性，也符合人们的生活常识</p>\n<h1 id=\"七、原创电影与改编电影有何差异？\"><a href=\"#七、原创电影与改编电影有何差异？\" class=\"headerlink\" title=\"七、原创电影与改编电影有何差异？\"></a>七、原创电影与改编电影有何差异？</h1><p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.4oeqnee8dpj4.png\"\n                     \n                ></p>\n<p>可见，绝大部分电影还是原创为主。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.3o19mntggc5c.png\"\n                     \n                ></p>\n<p>原创电影的利润与改编电影相差一倍多。</p>\n<h1 id=\"八、受众喜好与那些因素有关？电影时长为多少最合适？\"><a href=\"#八、受众喜好与那些因素有关？电影时长为多少最合适？\" class=\"headerlink\" title=\"八、受众喜好与那些因素有关？电影时长为多少最合适？\"></a>八、受众喜好与那些因素有关？电影时长为多少最合适？</h1><p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.1cg3xbzwubz4.png\"\n                     \n                ></p>\n<p>受众欢迎度较高的电影类型为Adventure，Science Fiction ，Fantasy。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.777udesc9r7k.png\"\n                     \n                ></p>\n<p>受众欢迎度较高的电影的时长基本在90-200分钟之间。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.33vaixewp474.png\"\n                     \n                ></p>\n<p>受欢迎度高的电影，评分肯定高。反之评分高的电影，受欢迎度可能低，这就是冷门好片的天地。</p>\n<h1 id=\"九、Universal-Pictures与Paramount-Pictures两家行业巨头的业绩如何？\"><a href=\"#九、Universal-Pictures与Paramount-Pictures两家行业巨头的业绩如何？\" class=\"headerlink\" title=\"九、Universal Pictures与Paramount Pictures两家行业巨头的业绩如何？\"></a>九、Universal Pictures与Paramount Pictures两家行业巨头的业绩如何？</h1><p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.2h5jra486agw.png\"\n                     \n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.26kanvogyxwg.png\"\n                     \n                ></p>\n<p>两家公司制作的主要电影类型几乎一致，戏剧类（Drama）、喜剧类（Comedy）、惊悚类（Thriller）、动作类（Action）占据了两家公司制作总量的60%左右，这与总的各类型电影数量分布也是相似的，可供其他公司参考其布局策略。</p>\n<h1 id=\"十、结论\"><a href=\"#十、结论\" class=\"headerlink\" title=\"十、结论\"></a>十、结论</h1><p>目前电影市场成熟，产量和票房都处于较高的水平；<br>电影的预算、评价会直接影响电影票房，故一定的电影预算是电影票房成功的基础；<br>(Animation)与(Family)、(Adventure, Thriller)与(Action)、(Fantasy) 与(Family)、(Thriller, Drama)与(Crime) 在给定阈值下有较强的关联性。<br>最受欢迎的电影类型是comedy和drama，投资这两个类型的电影是不错的选择；<br>(Universal Pictures)的电影数量多于(Paramount Pictures)，两者票房表现不相上下。<br>原创电影在电影工业中占绝对主导地位，因此应重视编剧和剧本的选择；<br>电影时长应控制在90～200分钟，最符合观众的观影习惯，也最易获得成功。</p>\n<h1 id=\"十一、Python代码\"><a href=\"#十一、Python代码\" class=\"headerlink\" title=\"十一、Python代码\"></a>十一、Python代码</h1><h4 id=\"导入包\"><a href=\"#导入包\" class=\"headerlink\" title=\"导入包\"></a>导入包</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom wordcloud import WordCloud\nfrom mlxtend.frequent_patterns import apriori\nfrom mlxtend.frequent_patterns import association_rules\nplt.rcParams[&#39;font.sans-serif&#39;] &#x3D; [&#39;SimHei&#39;]#显示中文\nplt.style.use(&#39;ggplot&#39;)</code></pre>\n<h5 id=\"使用apriori算法进行关联规则挖掘\"><a href=\"#使用apriori算法进行关联规则挖掘\" class=\"headerlink\" title=\"使用apriori算法进行关联规则挖掘\"></a>使用apriori算法进行关联规则挖掘</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">path &#x3D; &#39;D:&#x2F;python_data_file&#x2F;based_on_novel.csv&#39;\ndata &#x3D; pd.read_csv(path)\n\nmovie_genres &#x3D; pd.DataFrame(data,columns&#x3D;[&#39;original_title&#39;,&#39;genres&#39;])\nmovies_ohe &#x3D; movie_genres.drop(&#39;genres&#39;,1).join(movie_genres.genres.str.get_dummies())\n# print(movies_ohe.shape)#(10866, 21)\nmovies_ohe.set_index([&#39;original_title&#39;],inplace&#x3D;True)\n\nfrequent_itemsets_movies &#x3D; apriori(movies_ohe,use_colnames&#x3D;True, min_support&#x3D;0.025)\nresult &#x3D; [i for i in frequent_itemsets_movies.itemsets if len(i)&gt;1]\n# len(result)#37\nrules_movies &#x3D;  association_rules(frequent_itemsets_movies, metric&#x3D;&#39;lift&#39;, min_threshold&#x3D;1.25)\n# print(rules_movies)\nrules_movies[(rules_movies.lift&gt;3)].sort_values(by&#x3D;[&#39;lift&#39;], ascending&#x3D;False)</code></pre>\n<h5 id=\"处理数据\"><a href=\"#处理数据\" class=\"headerlink\" title=\"处理数据\"></a>处理数据</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">xdata &#x3D; data[[&#39;id&#39;,&#39;popularity&#39;,&#39;production_companies&#39;,\n              &#39;budget&#39;,&#39;revenue&#39;,&#39;original_title&#39;,&#39;runtime&#39;,&#39;release_date&#39;,&#39;genres&#39;,&#39;vote_count&#39;,&#39;vote_average&#39;,&#39;based on novel&#39;]]\n#要求制造商和电影类型不能为空\nclean_xdata &#x3D; xdata[xdata.production_companies.notnull()&amp;xdata.genres.notnull()].reset_index(drop&#x3D;True)\n# 每年总票房\nclean_xdata[&#39;year&#39;] &#x3D; pd.to_datetime(clean_xdata.release_date,format&#x3D;&#39;%Y-%m-%d&#39;).dt.year\nyear_revenue &#x3D; clean_xdata.groupby(&#39;year&#39;)[&#39;revenue&#39;].sum()\ndef pic_trend(data,tit,xlab,ylab):\n    plt.figure(figsize&#x3D;(12,6))\n    data.plot()\n    plt.title(tit,fontsize &#x3D; 20)\n    plt.xlabel(xlab,fontsize&#x3D;15)\n    plt.ylabel(ylab,fontsize&#x3D;15)\n    plt.show()\npic_trend(year_revenue,&#39;每年总票房统计&#39;,&#39;年份&#39;,&#39;总票房&#39;)\n#每年上映电影数量统计\nyear_count &#x3D; clean_xdata.groupby(&#39;year&#39;).id.count()\npic_trend(year_count,&#39;每年上映电影数量统计&#39;,&#39;年份&#39;,&#39;上映电影数量&#39;)\n#每年上映电影数量饼图\ndef pic_pie(data,val,gby,tit):\n    data &#x3D; data.reset_index(drop&#x3D;False)\n    fig &#x3D; plt.figure(figsize&#x3D;(16,8))\n    plt.pie(data[val],labels&#x3D;data[gby],autopct&#x3D;&#39;%.1f%%&#39;)\n    plt.title(tit,fontsize &#x3D; 15)\npic_pie(year_count,&#39;id&#39;,&#39;year&#39;,&#39;每年上映电影数量&#39;)</code></pre>\n<h4 id=\"画走势图\"><a href=\"#画走势图\" class=\"headerlink\" title=\"画走势图\"></a>画走势图</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\"># 随时间推移如何发生变化的\ngenre_df &#x3D; clean_xdata.genres.str.get_dummies()#构建虚拟变量，相当于把各电影类型作为列名展开为一个稀疏矩阵\ngenre_df[&#39;release_date&#39;] &#x3D; clean_xdata[&#39;year&#39;]\ngenre_by_year &#x3D; genre_df.groupby(&#39;release_date&#39;).sum()\nfig &#x3D; plt.figure(figsize&#x3D;(12,6))\nplt.plot(genre_by_year,label &#x3D; genre_by_year.columns)\nplt.legend(genre_by_year)\nplt.xticks(range(1950,2020,10))\nplt.title(&#39;电影类型随时间变动趋势图&#39;,fontsize&#x3D;20)\nplt.xlabel(&#39;年份&#39;,fontsize &#x3D; 20)\nplt.ylabel(&#39;数量&#39;,fontsize &#x3D; 20)\n\n# ②电影类型数量分布\ngenre_sum &#x3D; genre_by_year.sum().sort_values(ascending &#x3D; False)\n#这里的label参数加不加在图中没有任何变化\ngenre_sum.plot.barh(label&#x3D;&#39;genre&#39;,figsize &#x3D; (12,6))\nplt.title(&#39;电影类型数量分布图&#39;,fontsize &#x3D; 20)\nplt.xlabel(&#39;数量&#39;,fontsize&#x3D;20)\nplt.ylabel(&#39;电影类型&#39;,fontsize&#x3D;20)\nplt.show()</code></pre>\n<h4 id=\"计算指标\"><a href=\"#计算指标\" class=\"headerlink\" title=\"计算指标\"></a>计算指标</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\"># （二）不同类型电影的盈利能力如何？\n# 建立电影类型-利润数据框，计算各电影类型平均收益：\na &#x3D; clean_xdata.revenue - clean_xdata.budget\nprofit_df &#x3D; genre_df.join(pd.DataFrame(a,columns&#x3D;[&#39;profit&#39;]))\n\n#计算个电影类型的利润平均值\n#传递as_index&#x3D;False，把分组键的类型作为一列返回在DataFrame中，而不是默认True时作为Series的索引返回\ngenre_set &#x3D; clean_xdata[&#39;genres&#39;].str.get_dummies().columns.unique()\nprofit_by_genre &#x3D; pd.Series(index&#x3D;genre_set)\nfor genre in genre_set:\n    profit_by_genre[genre] &#x3D; profit_df.groupby(genre,as_index &#x3D; False).profit.mean().loc[1,&#39;profit&#39;]\n#画出各电影类型平均收益分布图\nprofit_by_genre.sort_values().plot.barh(label&#x3D;&#39;genre&#39;,figsize&#x3D;(12,6))\nplt.title(&#39;各电影类型平均收益分布图&#39;,fontsize&#x3D;20)\nplt.xlabel(&#39;利润&#39;,fontsize&#x3D;20)\nplt.ylabel(&#39;电影类型&#39;,fontsize&#x3D;20)\nplt.show()</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">original_recompose &#x3D; pd.DataFrame(clean_xdata[&#39;budget&#39;])\noriginal_recompose.loc[:,&#39;profit&#39;] &#x3D; profit_df.profit\noriginal_recompose[&#39;type&#39;] &#x3D; clean_xdata[&#39;based on novel&#39;].map(lambda x :1 if x&#x3D;&#x3D;&#39;based on novel&#39; else 0)\n#原创或改编电影的预算与利润\n#这个地方重新定义新的DataFrame --original_recompose_groupby用来存储各个指标分组后的均值（原创与改编电影概要）\noriginal_recompose_groupby &#x3D; original_recompose.groupby(&#39;type&#39;).mean()\noriginal_recompose_groupby[&#39;count&#39;] &#x3D; original_recompose.groupby(&#39;type&#39;).type.count()\noriginal_recompose_groupby[&#39;profit_rate&#39;] &#x3D; original_recompose_groupby.profit&#x2F;original_recompose_groupby.budget#这里有细节,平均利润率\noriginal_recompose_groupby.rename(index &#x3D; &#123;0:&#39;original&#39;,1:&#39;recompose&#39;&#125;,inplace &#x3D; True)#传递inplace&#x3D;True会删去原来的索引，否则会保留\n#是否原创电影数量对比图\nplt.figure(figsize &#x3D;(12,6))\noriginal_recompose_groupby.loc[original_recompose_groupby.index,&#39;count&#39;].plot.bar()#传入loc【】里面的参数不能是；&#39;type&#39;,会报错\nplt.title(&#39;原创改编电影数量对比&#39;,fontsize &#x3D; 20)\nplt.xlabel(&#39;原创-改变&#39;,fontsize &#x3D; 20)\nplt.ylabel(&#39;数量&#39;,fontsize &#x3D; 20)\nplt.show()\n\n#绘制利润柱状图\nx&#x3D; list(range(len(original_recompose_groupby.index)))#索引长度序列\nxl &#x3D; original_recompose_groupby.index#xl为索引实际值\nfig &#x3D; plt.figure()\nax1&#x3D;fig.add_subplot(111)\nplt.bar(x,original_recompose_groupby.profit)\n#接下来有疑问？\nplt.xticks(x,xl,rotation &#x3D; 0,fontsize&#x3D;12)\nplt.yticks(fontsize&#x3D;15)\nax1.set_title(&#39;原创与改编电影平均利润对比&#39;,fontsize &#x3D; 20)\nax1.set_xlabel(&#39;原创-改变&#39;,fontsize &#x3D; 18)\nax1.set_ylabel(&#39;利润&#39;,fontsize &#x3D; 18)\nax1.legend(loc&#x3D;2,labels&#x3D;&#39;利润&#39;)\n\n#绘制利润折线图\nimport matplotlib.ticker as mtick\nax2 &#x3D; ax1.twinx()\nax2.plot(x,original_recompose_groupby[&#39;profit_rate&#39;],&#39;go-&#39;,lw&#x3D;2)\nfmt&#x3D;&#39;%.2f%%&#39;\nyticks &#x3D; mtick.FormatStrFormatter(fmt)\nax2.yaxis.set_major_formatter(yticks)#次纵坐标标签设置为百分比显示\nplt.yticks(fontsize &#x3D; 15)\nax2.set_ylabel(&#39;利润率&#39;,fontsize &#x3D; 18)\nax2.legend(loc&#x3D;4,labels &#x3D; &#39;profit_rate&#39;)#传递labels参数避免警告</code></pre>\n<p>#####生成词云</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">keywords_data &#x3D; data[[&#39;id&#39;,&#39;popularity&#39;,&#39;production_companies&#39;,&#39;budget&#39;,&#39;revenue&#39;,&#39;original_title&#39;,&#39;runtime&#39;,&#39;release_date&#39;,&#39;genres&#39;,&#39;vote_count&#39;,&#39;vote_average&#39;,&#39;based on novel&#39;,&#39;keywords&#39;]]\nkeywords_data &#x3D; data[data.production_companies.notnull()&amp;data.genres.notnull()].reset_index(drop&#x3D;True)#得到 包含关键字keywords数据的列表\nkeywords_list1 &#x3D; []\nfor x in keywords_data.keywords.dropna():\n    keywords_list1.append(x)\nkeywords_list1 &#x3D; &#39;&#39;.join(keywords_list1)\nkeywords_list1 &#x3D; keywords_list1.replace(&#39;\\s&#39;,&#39;&#39;)#去除字符串中空字符串（\\s用于匹配空白字符，可能是空格、制表符、其他空白））\n\nwordcloud &#x3D; WordCloud(background_color&#x3D;&#39;black&#39;,max_words&#x3D;3000,scale&#x3D;1.5).generate(keywords_list1)\nplt.figure(figsize&#x3D;(14,8))\nplt.imshow(wordcloud)\nplt.axis(&#39;off&#39;)\nplt.show()</code></pre>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">popular_genre_df &#x3D; pd.concat([genre_df.iloc[:,:-1],clean_xdata.popularity],axis&#x3D;1)\n#计算各类型电影受欢迎度均值\nlist &#x3D; []\nfor genre in genre_set:\n    list.append(popular_genre_df.groupby(genre,as_index &#x3D; False).popularity.mean().loc[1,&#39;popularity&#39;])\npopular_by_genre&#x3D; pd.DataFrame(index&#x3D;genre_set)\npopular_by_genre[&#39;popularity_mean&#39;] &#x3D; list\n#电影类型受欢迎度分布图\npopular_by_genre.sort_values(by&#x3D;&#39;popularity_mean&#39;).plot.barh(figsize&#x3D;(14,8))\nplt.title(&#39;电影类型受欢迎度分布图&#39;,fontsize&#x3D;20)\nplt.xlabel(&#39;受欢迎度&#39;,fontsize&#x3D;20)\nplt.ylabel(&#39;电影类型&#39;,fontsize&#x3D;20)\nplt.show()\n# ②电影时长与受众欢迎度\nplt.scatter(clean_xdata.runtime,clean_xdata.popularity)\nplt.title(&#39;时长与欢迎度散点图&#39;,fontsize&#x3D;20)\nplt.xlabel(&#39;电影时长&#39;,fontsize&#x3D;20)\nplt.ylabel(&#39;受欢迎度&#39;,fontsize&#x3D;20)\nplt.show()\n# ③电影评分与受众欢迎度\nplt.scatter(clean_xdata.vote_average,clean_xdata.popularity)\nplt.title(&#39;评分与欢迎度散点图&#39;,fontsize&#x3D;20)\nplt.xlabel(&#39;电影评分&#39;,fontsize&#x3D;20)\nplt.ylabel(&#39;受欢迎度&#39;,fontsize&#x3D;20)\nplt.show()</code></pre>\n<h4 id=\"Universal-Pictures与Paramount-Pictures\"><a href=\"#Universal-Pictures与Paramount-Pictures\" class=\"headerlink\" title=\"Universal Pictures与Paramount Pictures\"></a>Universal Pictures与Paramount Pictures</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">companies_list &#x3D;[&#39;Universal Pictures&#39;,&#39;Paramount Pictures&#39;]\ncompanies_df &#x3D; pd.DataFrame()\nfor company in companies_list:#各电影的电影商是否包含两者中其中一个，是则返回1，否则返回0\n    companies_df[company] &#x3D;clean_xdata.production_companies.str.contains(company).map(lambda x :1 if x else 0)\ncompanies_df &#x3D; pd.concat([companies_df,genre_df.iloc[:,:-1],profit_df.profit],axis&#x3D;1)\nlist &#x3D; []\nfor company in companies_list:\n    list.append(companies_df.groupby(company,as_index&#x3D;False).profit.sum().loc[1,&#39;profit&#39;])\ncompanies_profit&#x3D; pd.DataFrame(list,index &#x3D; companies_list,columns&#x3D;[&#39;profit_sum&#39;])\ncompanies_profit.plot.bar(label &#x3D; companies_profit.index,figsize&#x3D;(8,6))\nplt.title(&#39;两家公司利润对比&#39;,fontsize&#x3D;20)\nplt.xticks(rotation &#x3D; 0)\nplt.ylabel(&#39;利润&#39;,fontsize &#x3D; 20)\nplt.show()\n\ncompanies_df_1 &#x3D; companies_df.groupby(&#39;Universal Pictures&#39;)[[&#39;Action&#39;, &#39;Adventure&#39;, &#39;Animation&#39;, &#39;Comedy&#39;, &#39;Crime&#39;, &#39;Documentary&#39;,\n       &#39;Drama&#39;, &#39;Family&#39;, &#39;Fantasy&#39;, &#39;Foreign&#39;, &#39;History&#39;, &#39;Horror&#39;, &#39;Music&#39;,\n       &#39;Mystery&#39;, &#39;Romance&#39;, &#39;Science Fiction&#39;, &#39;TV Movie&#39;, &#39;Thriller&#39;, &#39;War&#39;,\n       &#39;Western&#39;]].sum().loc[1,:]\ncompanies_df_2 &#x3D; companies_df.groupby(&#39;Paramount Pictures&#39;)[[&#39;Action&#39;, &#39;Adventure&#39;, &#39;Animation&#39;, &#39;Comedy&#39;, &#39;Crime&#39;, &#39;Documentary&#39;,\n       &#39;Drama&#39;, &#39;Family&#39;, &#39;Fantasy&#39;, &#39;Foreign&#39;, &#39;History&#39;, &#39;Horror&#39;, &#39;Music&#39;,\n       &#39;Mystery&#39;, &#39;Romance&#39;, &#39;Science Fiction&#39;, &#39;TV Movie&#39;, &#39;Thriller&#39;, &#39;War&#39;,\n       &#39;Western&#39;]].sum().loc[1,:]\ncompany_genre_df &#x3D; pd.DataFrame([companies_df_1,companies_df_2],index &#x3D; [&#39;Universal Pictures&#39;,&#39;Paramount Pictures&#39;]).T\nfig &#x3D; plt.figure(figsize&#x3D;(16,8))\nax1 &#x3D; fig.add_subplot(121)\nplt.pie(company_genre_df[&#39;Universal Pictures&#39;],labels&#x3D;company_genre_df.index,autopct&#x3D;&#39;%.1f%%&#39;)\nplt.title(&#39;Universal Pictures&#39;,fontsize &#x3D; 15)\n\nax2 &#x3D; fig.add_subplot(122)\nplt.pie(company_genre_df[&#39;Paramount Pictures&#39;],labels&#x3D;company_genre_df.index,autopct&#x3D;&#39;%.1f%%&#39;)\nplt.title(&#39;Paramount Pictures&#39;,fontsize&#x3D;15)</code></pre>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># 电影票房与哪些因素最相关？\nclean_xdata[[&#39;budget&#39;,&#39;popularity&#39;,&#39;release_date&#39;,&#39;runtime&#39;,&#39;vote_average&#39;,&#39;vote_count&#39;,&#39;revenue&#39;]].corr()\nimport seaborn as sns\nrevenue_corr &#x3D; clean_xdata[[&#39;budget&#39;,&#39;popularity&#39;,&#39;vote_count&#39;,&#39;revenue&#39;]]\nfig &#x3D; plt.figure(figsize&#x3D;(18,6))\n#电影票票房与电影预算相关性散点图\n\nax1 &#x3D; plt.subplot(1,3,1)\nax1 &#x3D; sns.regplot(x&#x3D;&#39;popularity&#39;, y&#x3D;&#39;revenue&#39;, data&#x3D;revenue_corr, x_jitter&#x3D;.1)\nax1.text(400,2e9,&#39;r&#x3D;0.64&#39;,fontsize&#x3D;15)\nplt.title(&#39;revenue by popularity&#39;,fontsize&#x3D;15)\nplt.xlabel(&#39;popularity&#39;,fontsize&#x3D;13)\nplt.ylabel(&#39;revenue&#39;,fontsize&#x3D;13)\n \nax2 &#x3D; plt.subplot(1,3,2)\nax2 &#x3D; sns.regplot(x&#x3D;&#39;vote_count&#39;, y&#x3D;&#39;revenue&#39;, data&#x3D;revenue_corr, x_jitter&#x3D;.1,color&#x3D;&#39;g&#39;,marker&#x3D;&#39;+&#39;)\nax2.text(6800,1.1e9,&#39;r&#x3D;0.78&#39;,fontsize&#x3D;15)\nplt.title(&#39;revenue by vote_count&#39;,fontsize&#x3D;15)\nplt.xlabel(&#39;vote_count&#39;,fontsize&#x3D;13)\nplt.ylabel(&#39;revenue&#39;,fontsize&#x3D;13)\n \nax3 &#x3D; plt.subplot(1,3,3)\nax3 &#x3D; sns.regplot(x&#x3D;&#39;budget&#39;, y&#x3D;&#39;revenue&#39;, data&#x3D;revenue_corr, x_jitter&#x3D;.1,color&#x3D;&#39;r&#39;,marker&#x3D;&#39;^&#39;)\nax3.text(1.6e8,2.2e9,&#39;r&#x3D;0.73&#39;,fontsize&#x3D;15)\nplt.title(&#39;revenue by budget&#39;,fontsize&#x3D;15)\nplt.xlabel(&#39;budget&#39;,fontsize&#x3D;13)\nplt.ylabel(&#39;revenue&#39;,fontsize&#x3D;13)</code></pre>\n<p>思路要明确，代码要简洁，以后尽量都写成函数。</p>\n","text":" 一、数据概述id：标识号imdb_id：IMDB 标识号popularity：在 Movie Database 上的相对页面查看次数budget：预算（美元）revenue：收入（美元）original_title：电影名称cast：演员列表，按 | 分隔，最多 5 名演员ho...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[],"tags":[{"name":"数据分析","slug":"数据分析","count":18,"path":"api/tags/数据分析.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E6%95%B0%E6%8D%AE%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">一、数据概述</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E6%8F%90%E5%87%BA%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">二、提出问题</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E6%AF%8F%E5%B9%B4%E4%B8%8A%E6%98%A0%E7%94%B5%E5%BD%B1%E6%95%B0%E9%87%8F%E3%80%81%E7%94%B5%E5%BD%B1%E6%80%BB%E7%A5%A8%E6%88%BF%E6%98%AF%E5%A4%9A%E5%B0%91%EF%BC%9F\"><span class=\"toc-text\">三、每年上映电影数量、电影总票房是多少？</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E7%94%B5%E5%BD%B1%E7%A5%A8%E6%88%BF%E4%B8%8E%E5%93%AA%E4%BA%9B%E5%9B%A0%E7%B4%A0%E6%9C%80%E7%9B%B8%E5%85%B3%EF%BC%9F\"><span class=\"toc-text\">四、电影票房与哪些因素最相关？</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E5%90%84%E7%B1%BB%E5%9E%8B%E7%94%B5%E5%BD%B1%E8%A1%A8%E7%8E%B0%EF%BC%9F\"><span class=\"toc-text\">五、各类型电影表现？</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81%E5%90%84%E7%94%B5%E5%BD%B1%E7%B1%BB%E5%9E%8B%E4%B9%8B%E9%97%B4%E5%85%B3%E8%81%94%E6%80%A7\"><span class=\"toc-text\">六、各电影类型之间关联性</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%83%E3%80%81%E5%8E%9F%E5%88%9B%E7%94%B5%E5%BD%B1%E4%B8%8E%E6%94%B9%E7%BC%96%E7%94%B5%E5%BD%B1%E6%9C%89%E4%BD%95%E5%B7%AE%E5%BC%82%EF%BC%9F\"><span class=\"toc-text\">七、原创电影与改编电影有何差异？</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%AB%E3%80%81%E5%8F%97%E4%BC%97%E5%96%9C%E5%A5%BD%E4%B8%8E%E9%82%A3%E4%BA%9B%E5%9B%A0%E7%B4%A0%E6%9C%89%E5%85%B3%EF%BC%9F%E7%94%B5%E5%BD%B1%E6%97%B6%E9%95%BF%E4%B8%BA%E5%A4%9A%E5%B0%91%E6%9C%80%E5%90%88%E9%80%82%EF%BC%9F\"><span class=\"toc-text\">八、受众喜好与那些因素有关？电影时长为多少最合适？</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B9%9D%E3%80%81Universal-Pictures%E4%B8%8EParamount-Pictures%E4%B8%A4%E5%AE%B6%E8%A1%8C%E4%B8%9A%E5%B7%A8%E5%A4%B4%E7%9A%84%E4%B8%9A%E7%BB%A9%E5%A6%82%E4%BD%95%EF%BC%9F\"><span class=\"toc-text\">九、Universal Pictures与Paramount Pictures两家行业巨头的业绩如何？</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8D%81%E3%80%81%E7%BB%93%E8%AE%BA\"><span class=\"toc-text\">十、结论</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8D%81%E4%B8%80%E3%80%81Python%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">十一、Python代码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AF%BC%E5%85%A5%E5%8C%85\"><span class=\"toc-text\">导入包</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8apriori%E7%AE%97%E6%B3%95%E8%BF%9B%E8%A1%8C%E5%85%B3%E8%81%94%E8%A7%84%E5%88%99%E6%8C%96%E6%8E%98\"><span class=\"toc-text\">使用apriori算法进行关联规则挖掘</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">处理数据</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%94%BB%E8%B5%B0%E5%8A%BF%E5%9B%BE\"><span class=\"toc-text\">画走势图</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E6%8C%87%E6%A0%87\"><span class=\"toc-text\">计算指标</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Universal-Pictures%E4%B8%8EParamount-Pictures\"><span class=\"toc-text\">Universal Pictures与Paramount Pictures</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"弦好想断","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/avatar.jpg","link":"/","description":"处女座男生，热爱技术、吉他、旅行。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"sql互联网游戏数据分析","uid":"3e2cb49607eb328dbcf69849d600f074","slug":"sql互联网游戏数据分析","date":"2020-04-19T17:45:16.000Z","updated":"2022-04-03T06:10:24.997Z","comments":true,"path":"api/articles/sql互联网游戏数据分析.json","keywords":null,"cover":null,"text":"一、数据概览数据共有828934条，108列标签 本文主要对以下10个字段进行分析 使用工具：Navicat Premium ，jupyter notebook技能要求：SQL掌握到子查询，Python连接数据库（不连也可以） 二、提出问题：1、新增玩家分析：从玩家数量、玩家占比...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"数据分析","slug":"数据分析","count":18,"path":"api/tags/数据分析.json"}],"author":{"name":"弦好想断","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/avatar.jpg","link":"/","description":"处女座男生，热爱技术、吉他、旅行。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"python面向对象习题","uid":"1eac341c429c84a40e6d901f88df1212","slug":"python面向对象习题","date":"2019-07-19T04:59:17.000Z","updated":"2022-04-03T06:08:04.656Z","comments":true,"path":"api/articles/python面向对象习题.json","keywords":null,"cover":null,"text":"写完对对象这个东西了解很多了 # coding&#x3D;utf-8 &quot;&quot;&quot; 一：定义一个学生类。有下面的类属性： 1 姓名 2 年龄 3 成绩（语文，数学，英语)[每课成绩的类型为整数] 类方法： 1 获取学生的姓名：get_name() 返回类型...","link":"","photos":[],"count_time":{"symbolsCount":"7.1k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"数据分析","slug":"数据分析","count":18,"path":"api/tags/数据分析.json"}],"author":{"name":"弦好想断","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/avatar.jpg","link":"/","description":"处女座男生，热爱技术、吉他、旅行。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}