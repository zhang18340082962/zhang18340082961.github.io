{"title":"python-flask疫情数据可视化","uid":"d36edaa00a28ef96e171ed217c165e70","slug":"python-flask疫情数据可视化","date":"2021-07-21T06:18:39.000Z","updated":"2022-05-29T16:19:01.040Z","comments":true,"path":"api/articles/python-flask疫情数据可视化.json","keywords":null,"cover":[],"content":"<p>Flask是一个轻量级的web框架，看了<a href=\"https://www.bilibili.com/video/BV177411j7qJ\">https://www.bilibili.com/video/BV177411j7qJ</a> 大佬的视频，做的一个疫情可视化项目,（电脑屏幕小看着有点拥挤。大屏展示还是挺好看的），热搜词云的数据找不到网站了，就弄了个表格；自己修改了一些部分，感兴趣的可以去康康视频，后续有时间再写点总结。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/%E5%9B%BE%E7%89%87.3zeoic47abi8.png\"></p>\n<h4 id=\"flask部分\"><a href=\"#flask部分\" class=\"headerlink\" title=\"flask部分\"></a>flask部分</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from flask import Flask,request,render_template,jsonify\nimport time\nimport utils\nimport pandas as pd\nfrom yiqin_data import update_history,update_details\nfrom selenium import webdriver\nimport threading\nimport webbrowser\n\n\napp &#x3D; Flask(__name__)\n\n@app.route(&#39;&#x2F;&#39;)\ndef index():\n    task  &#x3D; pd.DataFrame(utils.get_r2_data(),columns &#x3D;[&#39;省份&#39;,&#39;现存&#39;,&#39;累计&#39;,&#39;相比上日&#39;,&#39;治愈占比&#39;,&#39;死亡占比&#39;])\n    task[&#39;治愈占比&#39;] &#x3D; task[&#39;治愈占比&#39;].map(lambda x: format(x, &#39;.2%&#39;))\n    task[&#39;死亡占比&#39;] &#x3D; task[&#39;死亡占比&#39;].map(lambda x: format(x, &#39;.2%&#39;))\n    task &#x3D; task.to_html(index&#x3D;False,border&#x3D;0,max_cols&#x3D;8, max_rows&#x3D;7)\n    return render_template(&quot;main.html&quot;, task&#x3D; task)\n\n@app.route(&#39;&#x2F;time&#39;)\ndef gettime():\n    time_str &#x3D; time.strftime(&quot;%Y&#123;&#125;%m&#123;&#125;%d&#123;&#125; %X&quot;)\n    return time_str.format(&quot;年&quot;, &quot;月&quot;, &quot;日&quot;)\n\n@app.route(&#39;&#x2F;c1&#39;, methods&#x3D;[&#39;get&#39;,&#39;post&#39;])\ndef get_c1_data():\n    data &#x3D; utils.get_c1_data()\n    return jsonify(&#123;&quot;cumulative&quot;: str(data[1]),&quot;current&quot;: str(data[2]), &quot;overseas&quot;: str(data[3]), &quot;death&quot;: str(data[4]),\n                    &#39;新增确诊&#39;: str(data[5]), &#39;新增治愈&#39;: str(data[6]), &#39;新增境外&#39;: str(data[7]),&#39;新增死亡&#39;: str(data[8])&#125;)\n\n@app.route(&quot;&#x2F;c2&quot;, methods&#x3D;[&#39;get&#39;,&#39;post&#39;])\ndef get_c2_data():\n    res &#x3D; []\n    for tup in utils.get_c2_data():\n        res.append(&#123;&#39;name&#39;: tup[0],&#39;value&#39;: int(tup[1])&#125;)\n    return jsonify(&#123;&#39;data&#39;: res&#125;)\n\n@app.route(&quot;&#x2F;l1&quot;, methods&#x3D;[&#39;get&#39;,&#39;post&#39;])\ndef get_l1_data():\n    data &#x3D; utils.get_l1_data()\n    date, cumulative,current, overseas, death &#x3D; [], [], [], [], []\n    for a, b, c, d, e in data[:]:\n        date.append(pd.to_datetime(a,format &#x3D; &quot;%Y-%m-%d&quot;).strftime(&quot;%m-%d&quot;))\n        cumulative.append(b)\n        current.append(c)\n        overseas.append(d)\n        death.append(e)\n    return jsonify(&#123;&quot;date&quot;: date[-100:], &quot;cumulative&quot;: cumulative[-100:], &quot;current&quot;: current[-100:],\n                    &quot;overseas&quot;: overseas[-100:],&quot;death&quot;: death[-100:]&#125;)\n\n@app.route(&quot;&#x2F;l2&quot;, methods&#x3D;[&#39;get&#39;,&#39;post&#39;])\ndef get_l2_data():\n    data &#x3D; utils.get_l2_data()\n    date, cumulative, current, overseas, death  &#x3D; [], [], [], [], []\n    for a, b, c, d, e in data[:]:\n        date.append(pd.to_datetime(a,format &#x3D; &quot;%Y-%m-%d&quot;).strftime(&quot;%m-%d&quot;))\n        cumulative.append(b)\n        current.append(c)\n        overseas.append(d)\n        death.append(e)\n    return jsonify(&#123;&quot;date&quot;:date[-100:],&quot;cumulative&quot;:cumulative[-100:],&quot;current&quot;:current[-100:],\n                    &quot;overseas&quot;:overseas[-100:],&quot;death&quot;:death[-100:]&#125;)\n\n@app.route(&quot;&#x2F;r1&quot;, methods&#x3D;[&#39;get&#39;,&#39;post&#39;])\ndef get_r1_data():\n    data &#x3D; utils.get_r1_data()\n    city, confirm &#x3D; [], []\n    for a, b in data:\n        if a !&#x3D; &quot;地区待确认&quot; and  a !&#x3D;&quot;境外输入&quot;:\n            city.append(a)\n            confirm.append(int(b))\n    return jsonify(&#123;&quot;city&quot;:city[0:5],&quot;confirm&quot;:confirm[0:5]&#125;)\n\n\n# @app.route(&quot;&#x2F;r2&quot;, methods&#x3D;[&#39;get&#39;,&#39;post&#39;])\n# def get_r2_data():\n#     data &#x3D; utils.get_r2_data()\n#     d &#x3D; []\n#     for i in data:\n#         k &#x3D; i[0].rstrip(string.digits) # 移除热搜数字,从右边\n#         v &#x3D; i[0][len(k):] # 获取关键字\n#         ks &#x3D; extract_tags(k) # 使用结巴提取关键字\n#         for j in ks:\n#             if not j.isdigit():\n#                 d.append(&#123;&quot;name&quot;:j, &quot;value&quot;:v&#125;)\n#\n#     return jsonify(&#123;&quot;kws&quot;:d&#125;)\n\ndef start_web():\n    try:\n        browser &#x3D; webdriver.Chrome()\n        browser.maximize_window()\n        browser.get(f&#39;http:&#x2F;&#x2F;127.0.0.1:5000&#x2F;&#39;)\n    except Exception as e:\n        print(e)\n        pass\n\ndef start_web2():\n    webbrowser.open(&#39;http:&#x2F;&#x2F;127.0.0.1:5000&#x2F;&#39;)\n\ndef yiqing_run():\n    # app.run(host&#x3D;&#39;0.0.0.0&#39;,port&#x3D;8638)    #debug&#x3D;True,host&#x3D;&#39;0.0.0.0&#39;,port&#x3D;\n    app.run()\n\nif __name__&#x3D;&#x3D;&quot;__main__&quot;:\n    update_history()\n    update_details()\n    try:\n        t1 &#x3D; threading.Thread(target&#x3D;yiqing_run, )\n        t2 &#x3D; threading.Thread(target&#x3D;start_web2, )\n        t1.start()\n        time.sleep(1)\n        t2.start()\n    except Exception as e:\n        print(e)\n</code></pre>\n\n<h4 id=\"mysql部分\"><a href=\"#mysql部分\" class=\"headerlink\" title=\"mysql部分\"></a>mysql部分</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import time\nimport pymysql\nimport string\n\n\n# 连接数据库\ndef get_conn():\n    conn &#x3D; pymysql.connect(\n        host&#x3D;&quot;localhost&quot;,\n        user&#x3D;&quot;&quot;,\n        password&#x3D;&quot;&quot;,\n        db&#x3D;&quot;supermanzwg&quot;,\n        charset&#x3D;&quot;utf8&quot;,\n        port&#x3D;3306,\n    )\n    # 创建游标：\n    cursor &#x3D; conn.cursor()\n    return conn, cursor\n\ndef close_conn(conn, cursor):\n    if cursor:\n        cursor.close()\n    if conn:\n        conn.close()\n\ndef query(sql, *args):\n    &#39;&#39;&#39;\n    :param sql:\n    :param args:\n    :return:返回结果，((),())形式\n    &#39;&#39;&#39;\n    conn, cursor&#x3D; get_conn()\n    cursor.execute(sql)\n    res &#x3D; cursor.fetchall() # 获取结果\n    close_conn(conn, cursor)\n    return res\n\ndef get_c1_data():\n    sql &#x3D; &quot;&quot;&quot;\n        select a.date,a.cumulative,a.current,a.Overseas,a.death,b.&#96;新增确诊&#96;,b.&#96;新增治愈&#96;,b.&#96;新增境外&#96;,b.&#96;新增死亡&#96; \n        from \n        (select date,cumulative,current,Overseas,death \n        from  &#96;history&#96; \n        order by date desc limit 1) a \n        inner join \n        (SELECT b.date 日期,(b.cumulative-a.cumulative) 新增确诊,\n            -(a.cumulative-a.current-b.cumulative+b.current) 新增治愈,\n            (b.Overseas-a.Overseas) 新增境外,\n            (b.death-a.death) 新增死亡 \n            FROM &#96;history&#96; a, &#96;history&#96; b \n            where a.date &#x3D; DATE_SUB(str_to_date(b.date,&#39;%Y-%m-%d&#39;),interval 1 day)\n            order by 日期 desc limit 1) b\n        where a.date &#x3D; b.&#96;日期&#96;; &quot;&quot;&quot;\n    res &#x3D; query(sql)\n    return res[0]\n\ndef get_c2_data():\n    sql &#x3D; &quot;&quot;&quot;\n    select \n    province,current\n    from &#96;details&#96; \n    order by date  desc limit 34;&quot;&quot;&quot;\n    res &#x3D; query(sql)\n    return res\n\ndef get_l1_data():\n    sql &#x3D; &quot;&quot;&quot;\n    select *\n    from \n    (select date,cumulative,current,Overseas,death \n        from  &#96;history&#96; \n        order by date desc limit 10) a\n\t\torder by a.date asc;&quot;&quot;&quot;\n    res &#x3D; query(sql)\n    return res\n\ndef get_l2_data():\n    sql &#x3D; &quot;&quot;&quot;\n    select *\n    from \n    (SELECT b.date &#96;日期&#96;,(b.cumulative-a.cumulative) 新增确诊,\n        -(a.cumulative-a.current-b.cumulative+b.current) 新增治愈,\n        (b.Overseas-a.Overseas) 新增境外,\n        (b.death-a.death) 新增死亡 \n        FROM &#96;history&#96; a, &#96;history&#96; b \n        where a.date &#x3D; DATE_SUB(str_to_date(b.date,&#39;%Y-%m-%d&#39;),interval 1 day)\n        group by b.date  order by b.date desc limit 10) c\n\t\torder by c.&#96;日期&#96; asc&quot;&quot;&quot;\n    res &#x3D; query(sql)\n    return res\n\ndef get_r1_data():\n    # union_all 两块相加\n    sql &#x3D;&quot;&quot;&quot;select \n    province,current \n    from  &#96;details&#96;\n    where date &#x3D; (select max(date) max_date\n    from &#96;details&#96;) \n    order by date,current  desc limit 5; &quot;&quot;&quot;\n    res &#x3D; query(sql)\n    return res\n\n# 词云图没有\ndef get_r2_data():\n    sql &#x3D; &quot;&quot;&quot;SELECT \n\tprovince as &#96;省份&#96;,current as &#96;现存确诊&#96;,cumulative as &#96;累计确诊&#96;,\n\tby_yesterday as  &#96;相比上日&#96; ,round(heal&#x2F;cumulative,4) as &#96;治愈占比&#96;,round(death&#x2F;cumulative,4) as &#96;死亡占比&#96; \n    FROM &#96;details&#96;\n    where date  &#x3D;(select max(date) from &#96;details&#96;) \n    order by current desc limit 7;&quot;&quot;&quot;\n    res &#x3D; query(sql)\n    return res\nif __name__&#x3D;&#x3D;&#39;__main__&#39;:\n    print(get_l2_data())\n    pass</code></pre>\n\n<h4 id=\"selenium部分\"><a href=\"#selenium部分\" class=\"headerlink\" title=\"selenium部分\"></a>selenium部分</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">https:&#x2F;&#x2F;python-selenium-zh.readthedocs.io&#x2F;zh_CN&#x2F;latest&#x2F;</code></pre>\n\n\n\n<p>关于flask：<br><a href=\"https://www.cnblogs.com/songboriceboy/category/1867414.html\">https://www.cnblogs.com/songboriceboy/category/1867414.html</a><br><a href=\"https://blog.csdn.net/u014793102/category_9285123.html?spm=1001.2014.3001.5482\">https://blog.csdn.net/u014793102/category_9285123.html?spm=1001.2014.3001.5482</a></p>\n<p>关于selenium：</p>\n<p><a href=\"https://python-selenium-zh.readthedocs.io/zh_CN/latest/\">https://python-selenium-zh.readthedocs.io/zh_CN/latest/</a></p>\n","feature":true,"text":"Flask是一个轻量级的web框架，看了https://www.bilibili.com/video/BV177411j7qJ 大佬的视频，做的一个疫情可视化项目,（电脑屏幕小看着有点拥挤。大屏展示还是挺好看的），热搜词云的数据找不到网站了，就弄了个表格；自己修改了一些部分，感兴...","link":"","photos":[],"count_time":{"symbolsCount":"8.8k","symbolsTime":"8 mins."},"categories":[{"name":"python","slug":"python","count":18,"path":"api/categories/python.json"}],"tags":[{"name":"数据分析","slug":"数据分析","count":17,"path":"api/tags/数据分析.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#flask%E9%83%A8%E5%88%86\"><span class=\"toc-text\">flask部分</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mysql%E9%83%A8%E5%88%86\"><span class=\"toc-text\">mysql部分</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#selenium%E9%83%A8%E5%88%86\"><span class=\"toc-text\">selenium部分</span></a></li></ol>","author":{"name":"弦好想断","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"处女座男生，热爱技术、吉他、旅行。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Python数据分析 :pandas数据读取、预处理、筛选、计算，时间序列、透视、拼接、导出","uid":"74df2b30e38d008e4f87b397961dd215","slug":"Python数据分析：pandas数据读取、预处理、筛选、计算，时间序列、透视、拼接、导出","date":"2021-10-04T06:02:22.000Z","updated":"2022-05-29T15:45:21.460Z","comments":true,"path":"api/articles/Python数据分析：pandas数据读取、预处理、筛选、计算，时间序列、透视、拼接、导出.json","keywords":null,"cover":null,"text":"一、Pandas数据结构S1&#x3D;pd.Series([‘a’,’b’,’c’]) series是一组数据与一组索引（行索引）组成的数据结构 S1&#x3D;pd.Series([‘a’,’b’,’c’],index&#x3D;(1,3,4)) 指定索引 S1&#x3D;p...","link":"","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[{"name":"python","slug":"python","count":18,"path":"api/categories/python.json"}],"tags":[{"name":"数据分析","slug":"数据分析","count":17,"path":"api/tags/数据分析.json"}],"author":{"name":"弦好想断","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"处女座男生，热爱技术、吉他、旅行。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"python常用功能代码整理，持续更新","uid":"3b7fc023aaa69e49fca460e6ff5152b5","slug":"python常用功能代码整理，持续更新-md","date":"2022-06-08T08:01:27.000Z","updated":"2022-06-08T08:16:39.261Z","comments":true,"path":"api/articles/python常用功能代码整理，持续更新-md.json","keywords":null,"cover":null,"text":"部分参考，实测后有改动https://mp.weixin.qq.com/s/A0NYVPaNclMkKgie2swClw 本地文件整理 将本地多个 CSV 文件整合成一个文件import pandas as pd import os df_list &#x3D; [] for i...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"python","slug":"python","count":1,"path":"api/tags/python.json"}],"author":{"name":"弦好想断","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"处女座男生，热爱技术、吉他、旅行。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}