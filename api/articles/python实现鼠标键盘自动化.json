{"title":"python实现鼠标键盘自动化——pyautogui、opencv","uid":"93839c1fe9dbfd84d387b7dc441e6dcb","slug":"python实现鼠标键盘自动化","date":"2022-05-29T15:15:09.000Z","updated":"2022-06-22T15:55:30.019Z","comments":true,"path":"api/articles/python实现鼠标键盘自动化.json","keywords":null,"cover":null,"content":"<h1 id=\"概述：\"><a href=\"#概述：\" class=\"headerlink\" title=\"概述：\"></a>概述：</h1><p><strong>总的来说这是一个通过个人自定义流程（cmd表格文件中一个sheet为一套流程），在python环境下通过自定义鼠标键盘操作来实现自动化办公的RPA工具~</strong></p>\n<h2 id=\"所需环境：\"><a href=\"#所需环境：\" class=\"headerlink\" title=\"所需环境：\"></a>所需环境：</h2><p>pip install -i <a href=\"https://pypi.tuna.tsinghua.edu.cn/simple\">https://pypi.tuna.tsinghua.edu.cn/simple</a> pyperclip 回车</p>\n<p>pip install -i <a href=\"https://pypi.tuna.tsinghua.edu.cn/simple\">https://pypi.tuna.tsinghua.edu.cn/simple</a> xlrd 回车</p>\n<p>pip install -i <a href=\"https://pypi.tuna.tsinghua.edu.cn/simple\">https://pypi.tuna.tsinghua.edu.cn/simple</a> pyautogui==0.9.50 回车</p>\n<p>pip install -i <a href=\"https://pypi.tuna.tsinghua.edu.cn/simple\">https://pypi.tuna.tsinghua.edu.cn/simple</a> opencv-python 回车</p>\n<p>pip install -i <a href=\"https://pypi.tuna.tsinghua.edu.cn/simple\">https://pypi.tuna.tsinghua.edu.cn/simple</a> pillow 回车</p>\n<h1 id=\"初始化操作\"><a href=\"#初始化操作\" class=\"headerlink\" title=\"初始化操作\"></a>初始化操作</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import pyautogui\nimport xlrd\nimport pyperclip\nimport time\nimport os\nimport shutil\nimport sys\n\n# pyautogui.PAUSE &#x3D; 1 # 调用在执行动作后暂停的秒数，只能在执行一些pyautogui动作后才能使用，建议用time.sleep\npyautogui.FAILSAFE &#x3D; False # 启用自动防故障功能，左上角的坐标为（0，0），将鼠标移到屏幕的左上角，来抛出failSafeException异常\n\ndef resource_path(relative_path):\n    if getattr(sys, &#39;frozen&#39;, False):  # 是否Bundle Resource\n        base_path &#x3D; sys._MEIPASS\n    else:\n        base_path &#x3D; os.path.abspath(&quot;.&quot;)\n    return os.path.join(base_path, relative_path)\n\ndef ClearTemp():\n    MEIpath &#x3D; &quot;C:\\\\Users\\\\&quot; + os.getlogin() + &quot;\\\\AppData\\\\Local\\\\Temp&quot;\n    # mylog(&quot;当前临时文件位置&quot;, MEIpath)\n    # print(os.getlogin()) #获取计算机使用对象\n    for root, dirs, files in os.walk(MEIpath):\n        if &quot;_MEI&quot; in root:\n            try:\n                print(&quot;正在清理:&quot;,root)\n                shutil.rmtree(root)\n            except:\n                pass\n        else:\n            pass\n</code></pre>\n\n<h1 id=\"定义鼠标事件\"><a href=\"#定义鼠标事件\" class=\"headerlink\" title=\"定义鼠标事件\"></a>定义鼠标事件</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\"># pyautogui库其他用法 https:&#x2F;&#x2F;blog.csdn.net&#x2F;qingfengxd1&#x2F;article&#x2F;details&#x2F;108270159\ndef mouseClick(clickTimes, lOrR, img, reTry,fail_retry,retry_interval):\n    try:\n        time.sleep(retry_interval&#x2F;1000000)\n        fail_retry &#x3D; int(fail_retry)\n    except:\n        fail_retry&#x3D;10\n        retry_interval&#x3D;0.1\n    f &#x3D; open(f&quot;日志文件\\&#123;time.strftime(&#39;%Y-%m-%d&#39;, time.localtime())&#125;.txt&quot;,&quot;a+&quot;)\n    global pic_exist\n    pic_exist&#x3D; False\n    if reTry &#x3D;&#x3D; 1:\n        fail_retry_num&#x3D; 1\n        while True:\n            location &#x3D; pyautogui.locateCenterOnScreen(img, confidence&#x3D;0.98)\n            if location is not None:\n                pyautogui.click(location.x, location.y, clicks&#x3D;clickTimes, interval&#x3D;0.2, duration&#x3D;0.2, button&#x3D;lOrR)\n                break\n\n            print(f&quot;未找到匹配图片&#123;img&#125;,我将在&#123;retry_interval&#125;秒后重试&quot;)\n            f.write(f&quot;未找到匹配图片&#123;img&#125;,我将在&#123;retry_interval&#125;秒后重试\\n&quot;)\n            time.sleep(retry_interval)\n            fail_retry_num+&#x3D;1\n            if fail_retry_num&gt;fail_retry:\n                print(f&quot;已重试&#123;fail_retry&#125;次&quot;)\n                f.write(f&quot;已重试&#123;fail_retry&#125;次\\n&quot;)\n                pic_exist &#x3D; True\n                break\n    elif reTry &#x3D;&#x3D; -1:\n        #不建议这么搞\n        fail_retry_num&#x3D;1\n        while True:\n            location &#x3D; pyautogui.locateCenterOnScreen(img, confidence&#x3D;0.98)\n            if location is not None:\n                pyautogui.click(location.x, location.y, clicks&#x3D;clickTimes, interval&#x3D;0.2, duration&#x3D;0.2, button&#x3D;lOrR)\n            else:\n                print(f&quot;未找到匹配图片&#123;img&#125;,我将在&#123;retry_interval&#125;秒后重试&quot;)\n                f.write(f&quot;未找到匹配图片&#123;img&#125;,我将在&#123;retry_interval&#125;秒后重试\\n&quot;)\n    \n            time.sleep(retry_interval)\n            fail_retry_num +&#x3D; 1\n            if fail_retry_num &gt; fail_retry:\n                print(f&quot;已重试&#123;fail_retry&#125;次，无限重复且找不到图,你这是在玩火啊！&quot;)\n                f.write(f&quot;已重试&#123;fail_retry&#125;次，无限重复且找不到图!你这是在玩火啊！\\n&quot;)\n                pic_exist &#x3D; True\n                break\n\n\n    elif reTry &gt; 1:\n        i &#x3D; 1\n        fail_retry_num&#x3D;1\n        while i &lt; reTry + 1:\n            location &#x3D; pyautogui.locateCenterOnScreen(img, confidence&#x3D;0.98)\n            if location is not None:\n                pyautogui.click(location.x, location.y, clicks&#x3D;clickTimes, interval&#x3D;0.2, duration&#x3D;0.2, button&#x3D;lOrR)\n                print(&quot;重复&quot;)\n                i +&#x3D; 1\n            else:\n                print(f&quot;未找到匹配图片&#123;img&#125;,我将在&#123;retry_interval&#125;秒后重试&quot;)\n                f.write(f&quot;未找到匹配图片&#123;img&#125;,我将在&#123;retry_interval&#125;秒后重试\\n&quot;)\n            time.sleep(retry_interval)\n            fail_retry_num +&#x3D; 1\n            if fail_retry_num &gt; fail_retry:\n                print(f&quot;已重试&#123;fail_retry&#125;次&quot;)\n                f.write(f&quot;已重试&#123;fail_retry&#125;次\\n&quot;)\n                pic_exist &#x3D; True\n                break</code></pre>\n\n<h1 id=\"定义热键事件\"><a href=\"#定义热键事件\" class=\"headerlink\" title=\"定义热键事件\"></a>定义热键事件</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\"># hotkey_get方法用来判断热键组合个数,还是文字输入。此方法由B站up主 尔茄无双 提供。\ndef hotkey_get(hk_g_inputValue):\n    try:\n        newinput &#x3D; hk_g_inputValue.split(&#39;,&#39;)\n        pyautogui.hotkey(*tuple(newinput))\n    except:\n        pyperclip.copy(hk_g_inputValue)\n        pyautogui.hotkey(&#39;ctrl&#39;, &#39;v&#39;)</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># hotkey_get方法用来判断热键组合个数，并把热键传到对应的变量上newinput[0],[1],[2],[3]……[9]只写了10个后续可以添加。【老方法弃用】\n# newinput &#x3D; hk_g_inputValue.split(&#39;,&#39;)\n#         if len(newinput)&#x3D;&#x3D;1:\n#                 pyautogui.hotkey(hk_g_inputValue)\n#         elif len(newinput)&#x3D;&#x3D;2:\n#                 pyautogui.hotkey(newinput[0],newinput[1])\n#         elif len(newinput)&#x3D;&#x3D;3:\n#                 pyautogui.hotkey(newinput[0],newinput[1],newinput[2])\n#         elif len(newinput)&#x3D;&#x3D;4:\n#                 pyautogui.hotkey(newinput[0],newinput[1],newinput[2],newinput[3])\n#         elif len(newinput)&#x3D;&#x3D;4:\n#                     pyautogui.hotkey(newinput[0],newinput[1],newinput[2],newinput[3])\n#         elif len(newinput)&#x3D;&#x3D;5:\n#                     pyautogui.hotkey(newinput[0],newinput[1],newinput[2],newinput[3],newinput[4])\n#         elif len(newinput)&#x3D;&#x3D;6:\n#                     pyautogui.hotkey(newinput[0],newinput[1],newinput[2],newinput[3],newinput[4],newinput[5])\n#         elif len(newinput)&#x3D;&#x3D;7:\n#                     pyautogui.hotkey(newinput[0],newinput[1],newinput[2],newinput[3],newinput[4],newinput[5],newinput[6])\n#         elif len(newinput)&#x3D;&#x3D;8:\n#                     pyautogui.hotkey(newinput[0],newinput[1],newinput[2],newinput[3],newinput[4],newinput[5],newinput[6],newinput[7])\n#         elif len(newinput)&#x3D;&#x3D;9:\n#                     pyautogui.hotkey(newinput[0],newinput[1],newinput[2],newinput[3],newinput[4],newinput[5],newinput[6],newinput[7],newinput[8])\n#         elif len(newinput)&#x3D;&#x3D;10:\n#                     pyautogui.hotkey(newinput[0],newinput[1],newinput[2],newinput[3],newinput[4],newinput[5],newinput[6],newinput[7],newinput[8],newinput[9])\n\n# hotkey_Group方法调用hotkey_get方法，并判断其热键内容是否需要循环。</code></pre>\n<p>#键盘热键</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">def hotkeyGroup(reTry, hkg_inputValue):\n    if reTry &#x3D;&#x3D; 1:\n        hotkey_get(hkg_inputValue)\n        print(&quot;执行了：&quot;, hkg_inputValue)\n        time.sleep(0.1)\n    elif reTry &#x3D;&#x3D; -1:\n        while True:\n            hotkey_get(hkg_inputValue)\n            print(&quot;执行了：&quot;, hkg_inputValue)\n            time.sleep(0.1)\n    elif reTry &gt; 1:\n        i &#x3D; 1\n        while i &lt; reTry + 1:\n            hotkey_get(hkg_inputValue)\n            print(&quot;执行了：&quot;, hkg_inputValue)\n            i +&#x3D; 1\n            time.sleep(0.1)</code></pre>\n\n<h1 id=\"数据检查\"><a href=\"#数据检查\" class=\"headerlink\" title=\"数据检查\"></a>数据检查</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># cmdType.value  1.0 左键单击    2.0 左键双击  3.0 右键单击  4.0 输入  5.0 等待  6.0 滚轮\n# 7.0 热键组合（最多4个）\n# 8.0 粘贴当前时间\n# 9.0 系统命令集\n# ctype     空：0\n#           字符串：1\n#           数字：2\n#           日期：3\n#           布尔：4\n#           error：5\ndef dataCheck(sheet1):\n    checkCmd &#x3D; True\n    # 行数检查\n    if sheet1.nrows &lt; 2:\n        print(&quot;没数据啊哥&quot;)\n        checkCmd &#x3D; False\n    # 每行数据检查\n    i &#x3D; 1\n    while i &lt; sheet1.nrows:\n        # 第1列 操作类型检查\n        cmdType &#x3D; sheet1.row(i)[0]\n        if cmdType.ctype !&#x3D; 2 or (cmdType.value !&#x3D; 1.0 and cmdType.value !&#x3D; 2.0 and cmdType.value !&#x3D; 3.0\n                                  and cmdType.value !&#x3D; 4.0 and cmdType.value !&#x3D; 5.0 and cmdType.value !&#x3D; 6.0\n                                  and cmdType.value !&#x3D; 7.0 and cmdType.value !&#x3D; 8.0 and cmdType.value !&#x3D; 9.0):\n            print(&#39;第&#39;, i + 1, &quot;行,第1列数据有毛病&quot;)\n            checkCmd &#x3D; False\n        # 第2列 内容检查\n        cmdValue &#x3D; sheet1.row(i)[1]\n        # 读图点击类型指令，内容必须为字符串类型\n        if cmdType.value &#x3D;&#x3D; 1.0 or cmdType.value &#x3D;&#x3D; 2.0 or cmdType.value &#x3D;&#x3D; 3.0:\n            if cmdValue.ctype !&#x3D; 1:\n                print(&#39;第&#39;, i + 1, &quot;行,第2列数据有毛病&quot;)\n                checkCmd &#x3D; False\n        # 输入类型，内容不能为空\n        if cmdType.value &#x3D;&#x3D; 4.0:\n            if cmdValue.ctype &#x3D;&#x3D; 0:\n                print(&#39;第&#39;, i + 1, &quot;行,第2列数据有毛病&quot;)\n                checkCmd &#x3D; False\n        # 等待类型，内容必须为数字\n        if cmdType.value &#x3D;&#x3D; 5.0:\n            if cmdValue.ctype !&#x3D; 2:\n                print(&#39;第&#39;, i + 1, &quot;行,第2列数据有毛病&quot;)\n                checkCmd &#x3D; False\n        # 滚轮事件，内容必须为数字\n        if cmdType.value &#x3D;&#x3D; 6.0:\n            if cmdValue.ctype !&#x3D; 2:\n                print(&#39;第&#39;, i + 1, &quot;行,第2列数据有毛病&quot;)\n                checkCmd &#x3D; False\n        # 7.0 热键组合，内容不能为空\n        if cmdType.value &#x3D;&#x3D; 7.0:\n            if cmdValue.ctype &#x3D;&#x3D; 0:\n                print(&#39;第&#39;, i + 1, &quot;行,第2列数据有毛病&quot;)\n                checkCmd &#x3D; False\n        # 8.0 时间，内容不能为空\n        if cmdType.value &#x3D;&#x3D; 8.0:\n            if cmdValue.ctype &#x3D;&#x3D; 0:\n                print(&#39;第&#39;, i + 1, &quot;行,第2列数据有毛病&quot;)\n                checkCmd &#x3D; False\n        # 9.0 系统命令集模式，内容不能为空\n        if cmdType.value &#x3D;&#x3D; 9.0:\n            if cmdValue.ctype &#x3D;&#x3D; 0:\n                print(&#39;第&#39;, i + 1, &quot;行,第2列数据有毛病&quot;)\n                checkCmd &#x3D; False\n        i +&#x3D; 1\n    return checkCmd</code></pre>\n\n<h1 id=\"任务\"><a href=\"#任务\" class=\"headerlink\" title=\"任务\"></a>任务</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">def mainWork(img):\n    # cur_path &#x3D; os.getcwd()\n    i &#x3D; 1\n    f &#x3D; open(f&quot;日志文件\\&#123;time.strftime(&#39;%Y-%m-%d&#39;, time.localtime())&#125;.txt&quot;,&quot;a+&quot;)\n    # f.write(f&quot;\\n当前时间：&#123;time.strftime(&#39;%Y-%m-%d %H:%M:%S&#39;, time.localtime())&#125;\\n&quot;)\n    while i &lt; sheet1.nrows:\n        try:\n            # 取本行指令的操作类型\n            cmdType &#x3D; sheet1.row(i)[0]\n\n            if cmdType.value &#x3D;&#x3D; 1.0:\n                # 取图片名称\n                img &#x3D; sheet1.row(i)[1].value\n                reTry &#x3D; 1# 取重试次数\n                fail_retry &#x3D;sheet1.row(i)[3].value # 取查找图片失败重试次数\n                retry_interval &#x3D; sheet1.row(i)[4].value #取重试间隔\n                if sheet1.row(i)[2].ctype &#x3D;&#x3D; 2 and sheet1.row(i)[2].value !&#x3D; 0:\n                    reTry &#x3D; sheet1.row(i)[2].value\n                mouseClick(1, &quot;left&quot;, img, reTry,fail_retry,retry_interval)\n                if sheet1.row(i)[5].value&#x3D;&#x3D;1:\n                    print(f&quot;第&#123;i&#125;步，查找&#123;img&#125;超时将跳过\\n&quot;)\n                    f.write(f&quot;第&#123;i&#125;步，查找&#123;img&#125;超时将跳过\\n&quot;)\n                    pass\n                else:\n                    if pic_exist:\n                        #查找图片已超时\n                        print(f&quot;第&#123;i&#125;步，查找&#123;img&#125;超时将终止\\n&quot;)\n                        f.write(f&quot;第&#123;i&#125;步，查找&#123;img&#125;超时将终止\\n&quot;)\n                        break\n                    else:\n                        #查找未超时\n                        f.write(f&quot;第&#123;i&#125;步，单击左键&#123;reTry&#125;次，&#123;img&#125;\\n&quot;)\n                print(&quot;单击左键&quot;, img)\n    \n            # 2代表双击左键\n            elif cmdType.value &#x3D;&#x3D; 2.0:\n                # 取图片名称\n                img &#x3D; sheet1.row(i)[1].value\n                # 取重试次数\n                reTry &#x3D; 1\n                fail_retry &#x3D; sheet1.row(i)[3].value  # 取查找图片失败重试次数\n                retry_interval &#x3D; sheet1.row(i)[4].value  # 取重试间隔\n    \n                if sheet1.row(i)[2].ctype &#x3D;&#x3D; 2 and sheet1.row(i)[2].value !&#x3D; 0:\n                    reTry &#x3D; sheet1.row(i)[2].value\n                mouseClick(2, &quot;left&quot;, img, reTry,fail_retry,retry_interval)\n                if sheet1.row(i)[5].value&#x3D;&#x3D;1:\n                    print(f&quot;第&#123;i&#125;步，查找&#123;img&#125;超时将跳过\\n&quot;)\n                    f.write(f&quot;第&#123;i&#125;步，查找&#123;img&#125;超时将跳过\\n&quot;)\n                    pass\n                else:\n                    if pic_exist:\n                        #查找图片已超时\n                        print(f&quot;第&#123;i&#125;步，查找&#123;img&#125;超时将终止\\n&quot;)\n                        f.write(f&quot;第&#123;i&#125;步，查找&#123;img&#125;超时将终止\\n&quot;)\n                        break\n                    else:\n                        #查找未超时\n                        f.write(f&quot;第&#123;i&#125;步，双击左键&#123;reTry&#125;次，&#123;img&#125;\\n&quot;)\n                print(&quot;双击左键&quot;, img)\n                # f.write(f&quot;第&#123;i&#125;步，双击左键&#123;reTry&#125;次，&#123;img&#125;\\n&quot;)\n            # 3代表右键\n            elif cmdType.value &#x3D;&#x3D; 3.0:\n                # 取图片名称\n                img &#x3D; sheet1.row(i)[1].value\n                # 取重试次数\n                reTry &#x3D; 1\n                fail_retry &#x3D; sheet1.row(i)[3].value  # 取查找图片失败重试次数\n                retry_interval &#x3D; sheet1.row(i)[4].value  # 取重试间隔\n    \n                if sheet1.row(i)[2].ctype &#x3D;&#x3D; 2 and sheet1.row(i)[2].value !&#x3D; 0:\n                    reTry &#x3D; sheet1.row(i)[2].value\n                mouseClick(1, &quot;right&quot;, img, reTry,fail_retry,retry_interval)\n                if sheet1.row(i)[5].value &#x3D;&#x3D; 1:\n                    print(f&quot;第&#123;i&#125;步，查找&#123;img&#125;超时将跳过\\n&quot;)\n                    f.write(f&quot;第&#123;i&#125;步，查找&#123;img&#125;超时将跳过\\n&quot;)\n                    pass\n                else:\n                    if pic_exist:\n                        # 查找图片已超时\n                        print(f&quot;第&#123;i&#125;步，查找&#123;img&#125;超时将终止\\n&quot;)\n                        f.write(f&quot;第&#123;i&#125;步，查找&#123;img&#125;超时将终止\\n&quot;)\n                        break\n                    else:\n                        #查找未超时\n                        f.write(f&quot;第&#123;i&#125;步，单击右键&#123;reTry&#125;次，&#123;img&#125;\\n&quot;)\n                print(&quot;右键&quot;, img)\n                # f.write(f&quot;第&#123;i&#125;步，单击右键&#123;reTry&#125;次，&#123;img&#125;\\n&quot;)\n                # 4代表输入\n            elif cmdType.value &#x3D;&#x3D; 4.0:\n                inputValue &#x3D; sheet1.row(i)[1].value\n                pyperclip.copy(inputValue)\n                pyautogui.hotkey(&#39;ctrl&#39;, &#39;v&#39;)\n                print(f&quot;第&#123;i&#125;步，输入&#123;inputValue&#125;&quot;)\n                f.write(f&quot;第&#123;i&#125;步，输入&#123;inputValue&#125;\\n&quot;)\n                time.sleep(0.5)\n            # 5代表等待\n            elif cmdType.value &#x3D;&#x3D; 5.0:\n                #取等待时间\n                waitTime &#x3D; sheet1.row(i)[1].value\n                time.sleep(waitTime)\n                print(f&quot;第&#123;i&#125;步，等待&quot;, waitTime, &quot;秒&quot;)\n                f.write(f&quot;第&#123;i&#125;步，等待&#123;waitTime&#125;秒\\n&quot;)\n            # 6代表滚轮\n            elif cmdType.value &#x3D;&#x3D; 6.0:\n                #取滚动距离\n                scroll &#x3D; sheet1.row(i)[1].value\n                pyautogui.scroll(int(scroll))\n                print(f&quot;第&#123;i&#125;步，滚轮滑动,&#123;int(scroll)&#125;, 距离&quot;)\n                f.write(f&quot;第&#123;i&#125;步，滚轮滑动&#123;int(scroll)&#125;距离\\n&quot;)\n            # 7代表_热键组合\n            elif cmdType.value &#x3D;&#x3D; 7.0:\n                # 取重试次数,并循环。\n                reTry &#x3D; 1\n                if sheet1.row(i)[2].ctype &#x3D;&#x3D; 2 and sheet1.row(i)[2].value !&#x3D; 0:\n                    reTry &#x3D; sheet1.row(i)[2].value\n                inputValue &#x3D; sheet1.row(i)[1].value\n                hotkeyGroup(reTry, inputValue)\n                print(f&quot;第&#123;i&#125;步，执行了&#123;reTry&#125;次热键组合&#123;inputValue&#125;&quot;)\n                f.write(f&quot;第&#123;i&#125;步，执行了&#123;reTry&#125;次热键组合&#123;inputValue&#125;\\n&quot;)\n                time.sleep(0.5)\n            # 8代表_粘贴当前时间\n            elif cmdType.value &#x3D;&#x3D; 8.0:\n                # 设置本机当前时间。\n                localtime &#x3D; time.strftime(&quot;%Y-%m-%d %H：%M：%S&quot;, time.localtime())\n                pyperclip.copy(localtime)\n                pyautogui.hotkey(&#39;ctrl&#39;, &#39;v&#39;)\n                print(f&quot;第&#123;i&#125;步，粘贴了本机时间:&quot;, localtime)\n                f.write(f&quot;第&#123;i&#125;步，粘贴了本机时间: &#123;localtime&#125;\\n&quot;)\n                time.sleep(0.5)\n            # 9代表_系统命令集模式\n            elif cmdType.value &#x3D;&#x3D; 9.0:\n                wincmd &#x3D; sheet1.row(i)[1].value\n                os.system(wincmd)\n                print(f&quot;第&#123;i&#125;步，运行系统命令:&quot;, wincmd)\n                f.write(f&quot;第&#123;i&#125;步，运行系统命令 &#123;wincmd&#125;\\n&quot;)\n                time.sleep(0.5)\n    \n        except Exception as error:\n            print(f&quot;执行第&#123;i&#125;条步骤发生报错&#123;error&#125;,将中断当前流程，请解决错误后重新执行！&quot;)\n            f.write(f&quot;执行第&#123;i&#125;条步骤发生报错:\\n&#123;error&#125;,\\n将中断当前流程，请解决错误后重新执行！\\n&quot;)\n            # time.sleep(10)\n            break\n        i +&#x3D; 1\n    #关闭日志文件\n    f.write(f&quot;当前时间：&#123;time.strftime(&#39;%Y-%m-%d %H:%M:%S&#39;, time.localtime())&#125;\\n&quot;)\n    f.write(&quot;-----------本次流程执行日志记录完毕-----------\\n&quot;)\n    f.close()</code></pre>\n\n<h1 id=\"主程序\"><a href=\"#主程序\" class=\"headerlink\" title=\"主程序\"></a>主程序</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">while True:\n    if __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n        file &#x3D; &#39;cmd.xls&#39;\n        # 打开文件\n        wb &#x3D; xlrd.open_workbook(filename&#x3D;file)\n        print(&#39;-----欢迎使用傻妞RPA~-----\\n&#39;)\n        try:\n            sheet_names &#x3D; wb.sheet_names()\n            sheet_name &#x3D; input(f&#39;请准确输入自动化流程sheet表名或位置序号(从1开始):  (输入0直接退出)\\n现有的sheet表名称有：&#39;\n                               f&#39;&#123;sheet_names&#125;\\nPS：执行包含“-0“的流程完毕后会自动退出\\n———————————————————————————————————————\\n&#39;)\n            if sheet_name&#x3D;&#x3D; &#39;0&#39;:\n                print(&quot;正清理缓存文件...&quot;)\n                # os.system(&#39;@echo off &amp; for &#x2F;d %i in (%temp%\\^_MEI*) do (rd &#x2F;s &#x2F;q &quot;%i&quot;)&gt;nul&#39;)\n                ClearTemp()\n                # exit(&quot;正在退出程序...&quot;)\n                break\n            elif type(int(sheet_name))&#x3D;&#x3D;int:\n                sheet_name &#x3D; sheet_names[int(sheet_name)-1]\n\n            # 通过索引获取表格sheet页\n            sheet1 &#x3D; wb.sheet_by_name(sheet_name)  # 这里选择你配置的工作表名称\n            f &#x3D; open(f&quot;日志文件\\&#123;time.strftime(&#39;%Y-%m-%d&#39;, time.localtime())&#125;.txt&quot;,&quot;a+&quot;)\n            f.write(f&quot;\\n当前时间：&#123;time.strftime(&#39;%Y-%m-%d %H:%M:%S&#39;, time.localtime())&#125;，即开始执行流程——&#123;sheet_name&#125;\\n&quot;)\n            f.close()\n        except Exception as e:\n            print(e,&quot;\\nsheet名输错了,没这个文件啊，重新输入吧(输入0可直接退出)\\n&quot;)\n            continue\n        # 避免多次循环导致的ctrl+v导入到，按ESC进行取消。\n        pyautogui.hotkey(&#39;esc&#39;)\n        # 数据检查\n        checkCmd &#x3D; dataCheck(sheet1)\n    \n        # 输入选项实现功能\n        if checkCmd:\n            key &#x3D; input(f&#39;即将开始执行流程：&#123;sheet_name&#125;\\n选择功能: 1.做一次 2.循环几次 0.退出程序\\n特殊功能：c.清理屏幕显示（请输入后最小化当前页面）\\n———————————————————————————————————————\\n&#39;)\n            if key &#x3D;&#x3D; &#39;1&#39; or key &#x3D;&#x3D;&quot;&quot;:\n                # 循环拿出每一行指令\n                print(&quot;正在执行第1次流程\\n&quot;)\n                mainWork(sheet1)\n                print(&quot;本次命令执行完了.&quot;)\n                print(&quot;正清理缓存文件...&quot;)\n                ClearTemp()\n                # os.system(&#39;@echo off &amp; for &#x2F;d %i in (%temp%\\^_MEI*) do (rd &#x2F;s &#x2F;q &quot;%i&quot;)&gt;nul&#39;)\n                # exit(&quot;正在退出程序...快去成为你想要的样子！&quot;)\n                print(&quot;清理缓存完毕，快去成为你想要的样子！&quot;)\n                print(&quot;——————————————————分割线——————————————————&quot;)\n                if &quot;-0&quot; in sheet_name:\n                    print(&quot;正清理缓存文件...&quot;)\n                    # os.system(&#39;@echo off &amp; for &#x2F;d %i in (%temp%\\^_MEI*) do (rd &#x2F;s &#x2F;q &quot;%i&quot;)&gt;nul&#39;)\n                    ClearTemp()\n                    exit(&quot;正在退出程序...&quot;)\n    \n            elif key &#x3D;&#x3D; &#39;2&#39;:\n                print(&quot;&quot;)\n                count &#x3D; 0\n                times &#x3D; input(&#39;想要执行几次呢? 最高执行10次喔\\n&#39;)\n                times &#x3D; int(times)\n                if count &lt; times and times&lt;&#x3D;10:\n                    while count &lt; times:\n                        count +&#x3D; 1\n                        print(&quot;正在执行第&quot;, count, &quot;次流程&quot;)\n                        mainWork(sheet1)\n                        time.sleep(0.1)\n                        print(&quot;等待0.1秒&quot;)\n                        print(&quot;已经完成第&quot;, count, &quot;次&quot;, &quot;命令&quot;)\n                        print(&quot;——————————————————分割线——————————————————&quot;)\n                if &quot;-0&quot; in sheet_name:\n                    print(&quot;正清理缓存文件...&quot;)\n                    # os.system(&#39;@echo off &amp; for &#x2F;d %i in (%temp%\\^_MEI*) do (rd &#x2F;s &#x2F;q &quot;%i&quot;)&gt;nul&#39;)\n                    ClearTemp()\n                    exit(&quot;正在退出程序...&quot;)\n                else:\n                    print(&#39;输入有误或者已经退出!&#39;)\n                    os.system(&#39;pause&#39;)\n                    print(&quot;——————————————————————————————————————————&quot;)\n    \n            # elif key &#x3D;&#x3D; &#39;3&#39;:\n            #     count &#x3D; 0\n            #     while True:\n            #         count +&#x3D; 1\n            #         print(&quot;正在执行第&quot;, count, &quot;次&quot;, &quot;命令&quot;)\n            #         print(&quot;&quot;)\n            #         mainWork(sheet1)\n            #         time.sleep(0.1)\n            #         print(&quot;等待0.1秒&quot;)\n            #         print(&quot;&quot;)\n            #         print(&quot;已经完成第&quot;, count, &quot;次&quot;, &quot;命令&quot;)\n            #         print(&quot;——————————————————分割线——————————————————&quot;)\n            #         print(&quot;&quot;)\n    \n            elif key &#x3D;&#x3D; &#39;0&#39;:\n                print(&quot;正清理缓存文件...&quot;)\n                # os.system(&#39;@echo off &amp; for &#x2F;d %i in (%temp%\\^_MEI*) do (rd &#x2F;s &#x2F;q &quot;%i&quot;)&gt;nul&#39;)\n                ClearTemp()\n                exit(&quot;正在退出程序...&quot;)\n    \n            elif key &#x3D;&#x3D; &#39;c&#39;:\n                os.system(&#39;cls&#39;)\n    \n            else:\n                print(&#39;输入有误或者已经退出!&#39;)\n                os.system(&#39;pause&#39;)\n                print(&quot;——————————————————————————————————————————&quot;)</code></pre>\n\n<h1 id=\"大致的操作说明\"><a href=\"#大致的操作说明\" class=\"headerlink\" title=\"大致的操作说明\"></a>大致的操作说明</h1><p>\\1.   双击exe文件执行开始时请输入表名称；按照提示输入后回车即可；在cmd.xls 的每个sheet中，一个sheet对应一个自动化流程，自己新建命名即可配置每一步的指令，如：</p>\n<p>\\2.   指令类型1、2、3是操作鼠标单击、双击、右击，对应的内容在第二列填 截图文件路径（例如“./pic/chrome.png”；这里最前面有个点别忘了），把每一步要操作的图标、区域截图保存至pics文件夹图片为png格式，截图名称必须为英文，中文不行。（注意：如果同屏有多个相同图标，会默认找到最左上的一个，因此怎么截图，截多大的区域，是个学问，如输入框只截中间空白部分肯定是不行的，宗旨就是“唯一”）</p>\n<p>\\3.   指令5是等待时长（单位秒） ，建议每配置一步都加上一定等待时间，否则可能会容易卡顿；</p>\n<p>\\4.   指令6是滚轮的距离，正数表示向上滚，负数表示向下滚，滚动距离不确定的话可自己进行测试，可从50或100开始；</p>\n<p>\\5.   指令4是输入，实际实现逻辑为复制粘贴，会占用粘贴板资源。</p>\n<p>\\6.   指令7是热键，第二列将需要的组合的热键以英文半角逗号（”,”）分隔填写即可。例如：win,r,ctrl,shift,esc,1,2,3,4,del（del删除这类热键要慎用）</p>\n<p>当然单个的按键也是可以，单个按键时后面必须加”,” (例如：9, 按一下9这个键。)注意：英文中的逗号”,”无法作为热键被单独被识别，原因是这个符号被用来分隔其他按键组合了。</p>\n<p>\\7.   第三列，重复次数；不填写则默认为执行1次，填写的话只能填写正整数，-1为无限循环；目前重复次数仅支持 第一列为 1,2,3,7 的指令（分别为：鼠标单击，双击，右键，热键组合。）但不建议填-1可能会卡死喔。</p>\n<p>\\8.   第四列，失败重试次数（正整数，否则默认重试10次）</p>\n<p>\\9.   第五列，重试间隔（秒，默认间隔0.1秒）</p>\n<p>\\10. 第六列，失败后是否跳过（为1将跳过，其他或不填将中断；仅对指令1/2/3生效）</p>\n<p>\\11. 指令8是本机时间粘贴，获取当前系统时间。此指令也会使用粘贴板，实际为复制粘贴。第一列填写8，第二列<strong>填写</strong>“当前时间”（一定要填写，否者不执行），第三列重复次数无效。</p>\n<p>\\12. 指令9是执行系统指令，第二列填写系统指令，第三列重复次数无效。</p>\n<p>例如：start c:（在新窗口中打开C盘）；start cmd （打开CMD程序）</p>\n<p>\\13. 开始程序后请将程序框最小化，不然程序框挡住的区域是无法识别和操作的。</p>\n<p>\\14. 双击exe文件打开程序（目前只能win10/11使用，<strong>如果<strong><strong>win7</strong></strong>使用报错：需要安装<strong><strong>kb2533623</strong></strong>补丁，这里不提供。</strong>），根据提示输入相关指令后敲回车；如果不能运行或者开始后立马关闭；说明流程有问题，可检查cmd表格文件中的数据是否有错；一般都是图片路径填写错误，指令数据填写错误这类问题；如果实在无法解决那就关掉吧~</p>\n<p>\\15. 执行开始时或完毕后都会有退出选项；尽量使用这个选项（输入0之后回车）退出程序，（可以避免出现exe执行文件会产生临时文件，长久累积可能会占满C盘（这是python可执行文件的一个特性））；如果程序开始后因为你选择了多次重复而键鼠被占用但是想要停下来，关闭Dos控制台即可。点击右上角的x 或者ctrl+c或者alt+F4 都可以。</p>\n<p>代码参考B站大佬（不高兴就喝水）的源码 进行二次开发，加入查找失败重试，超时查找，快捷键组合，dos命令，实时日志记录等功能；（有些自动化操作受windows系统安全限制可能会失效，这里不一一列举了）一直想做个图形化界面客户端，还有些地方没有打通。。。</p>\n<p><a href=\"https://www.bilibili.com/video/BV1T34y1o73U?spm_id_from=333.999.0.0\">https://www.bilibili.com/video/BV1T34y1o73U?spm_id_from=333.999.0.0</a></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"></code></pre>","feature":true,"text":"概述：总的来说这是一个通过个人自定义流程（cmd表格文件中一个sheet为一套流程），在python环境下通过自定义鼠标键盘操作来实现自动化办公的RPA工具~ 所需环境：pip install -i https://pypi.tuna.tsinghua.edu.cn/simple...","link":"","photos":[],"count_time":{"symbolsCount":"24k","symbolsTime":"22 mins."},"categories":[{"name":"python","slug":"python","count":18,"path":"api/categories/python.json"}],"tags":[{"name":"自动化","slug":"自动化","count":6,"path":"api/tags/自动化.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">概述：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%89%80%E9%9C%80%E7%8E%AF%E5%A2%83%EF%BC%9A\"><span class=\"toc-text\">所需环境：</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">初始化操作</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E4%B9%89%E9%BC%A0%E6%A0%87%E4%BA%8B%E4%BB%B6\"><span class=\"toc-text\">定义鼠标事件</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E4%B9%89%E7%83%AD%E9%94%AE%E4%BA%8B%E4%BB%B6\"><span class=\"toc-text\">定义热键事件</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E6%A3%80%E6%9F%A5\"><span class=\"toc-text\">数据检查</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%BB%E5%8A%A1\"><span class=\"toc-text\">任务</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">主程序</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%A4%A7%E8%87%B4%E7%9A%84%E6%93%8D%E4%BD%9C%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">大致的操作说明</span></a></li></ol>","author":{"name":"弦好想断","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"处女座男生，热爱技术、吉他、旅行。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"Python数据分析 :pandas数据读取、预处理、筛选、计算，时间序列、透视、拼接、导出","uid":"74df2b30e38d008e4f87b397961dd215","slug":"Python数据分析：pandas数据读取、预处理、筛选、计算，时间序列、透视、拼接、导出","date":"2021-10-04T06:02:22.000Z","updated":"2022-05-29T15:45:21.460Z","comments":true,"path":"api/articles/Python数据分析：pandas数据读取、预处理、筛选、计算，时间序列、透视、拼接、导出.json","keywords":null,"cover":null,"text":"一、Pandas数据结构S1&#x3D;pd.Series([‘a’,’b’,’c’]) series是一组数据与一组索引（行索引）组成的数据结构 S1&#x3D;pd.Series([‘a’,’b’,’c’],index&#x3D;(1,3,4)) 指定索引 S1&#x3D;p...","link":"","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[{"name":"python","slug":"python","count":18,"path":"api/categories/python.json"}],"tags":[{"name":"数据分析","slug":"数据分析","count":15,"path":"api/tags/数据分析.json"}],"author":{"name":"弦好想断","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"处女座男生，热爱技术、吉他、旅行。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}