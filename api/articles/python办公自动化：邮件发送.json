{"title":"python办公自动化：邮件发送","uid":"3836a474642d761a6e5b64bf08fc9275","slug":"python办公自动化：邮件发送","date":"2021-04-05T02:24:12.000Z","updated":"2022-04-03T06:09:35.722Z","comments":true,"path":"api/articles/python办公自动化：邮件发送.json","keywords":null,"cover":null,"content":"<ul>\n<li>邮件批量发送<br>调用smtp.exmail.qq.com批量自动发送邮件<br>注意文件路径，逗号分隔符，csv中不要有多余回车和空格<pre class=\"line-numbers language-none\"><code class=\"language-none\">import os\nimport sys\nimport csv\nimport smtplib\nimport pandas as pd\nimport numpy as np\nfrom email.mime.base import MIMEBase\nfrom email.mime.image import MIMEImage\nfrom email.utils import formataddr\nfrom email import encoders\nimport time,datetime\nimport smtplib\nimport email.mime.multipart\nimport email.mime.text\nfrom email.mime.text import MIMEText\nfrom email.mime.multipart import MIMEMultipart\nfrom email.mime.application import MIMEApplication\nfrom email.header import Header\n\ndef get_current_date():\n    &quot;&quot;&quot;获取当前时间&quot;&quot;&quot;\n    return str(time.strftime(&#39;%Y%m%d&#39;))\n\ndef getAddrBook(addrBook):\n    &#39;&#39;&#39;\n        @作用：根据输入的CSV文件，形成相应的通讯录字典\n        @返回：字典类型，name为人名，value为对应的邮件地址\n    &#39;&#39;&#39;\n    with open(addrBook,&#39;r&#39;,encoding&#x3D;&#39;UTF-8&#39;) as addrFile:\n        #将文件名和邮件接收人邮箱地址分行存放在csv文件中，用逗号分隔\n        reader &#x3D; csv.reader(addrFile)\n        name &#x3D; []\n        value &#x3D; []\n        for row in reader:\n            name.append(row[0])\n            value.append(row[1])\n    addrs &#x3D; dict(zip(name, value))\n    return addrs\n\ndef send_email(inputpath,smtpHost,port,sendAddr,password,recipientAddrs, subject, content,attachfilename):\n    &quot;&quot;&quot;定义并配置好发邮件的函数&quot;&quot;&quot;\n    msg &#x3D; email.mime.multipart.MIMEMultipart()\n    msg[&#39;from&#39;] &#x3D;sendAddr #发件人\n    msg[&#39;to&#39;] &#x3D;recipientAddrs #接收人\n    # msg[&#39;cc&#39;] &#x3D;cc_name #抄送人名称\n    msg[&#39;subject&#39;] &#x3D;subject #主题\n    content&#x3D;content\n    txt &#x3D; email.mime.text.MIMEText(content, &#39;plain&#39;, &#39;UTF-8&#39;)\n    msg.attach(txt)\n    print(&quot;准备添加附件...&quot;)\n    inputfile&#x3D;inputpath+attachfilename #文件路径\n    part &#x3D; MIMEText(open(inputfile,&#39;rb&#39;).read(),&#39;base64&#39;, &#39;utf-8&#39;)\n    part[&quot;Content-Type&quot;] &#x3D; &#39;application&#x2F;octet-stream&#39;\n    part.add_header(&#39;Content-Disposition&#39;, &#39;attachment&#39;, filename&#x3D;Header(attachfilename,&#39;utf-8&#39;).encode())\n    msg.attach(part)\n    smtp &#x3D; smtplib.SMTP_SSL(smtpHost, port)\n    smtp.login(sendAddr, password)\n    smtp.sendmail(sendAddr, recipientAddrs.split(&#39;,&#39;), str(msg))   #+cc_name.split(&#39;,&#39;)\n    #print(&quot;发送成功！&quot;)\n    smtp.quit()\n\nif __name__&#x3D;&#x3D;&#39;__main__&#39;:\n    #这里需要定义send_email函数中传入的所有变量\n    inputpath &#x3D; &quot;r&#39;D:&#x2F;&quot; #数据存放的文件路径（这里是绝对路径）\n    smtpHost &#x3D; &#39;smtp.exmail.qq.com&#39;  # 默认服务器地址及端口\n    port&#x3D;465\n    sendAddr &#x3D;&quot;&quot;    #自己也就是发件人的邮箱账号\n    password &#x3D; &quot;&quot;   #自己的邮箱密码\n    subject&#x3D;&quot; &quot;+current_date  #主题+当前日期\n    content&#x3D;&#39;&#39;&#39;附件为测试文件&#39;&#39;&#39;+current_date# 正文内容+当前日期\n\n    addrBook&#x3D;r&#39;D:\\邮箱联系人表单.csv&#39;  #联系人表单文件路径\n    addrs&#x3D;getAddrBook(addrBook)\n    for i in addrs:\n        attachfilename&#x3D;i+&#39;.xlsx&#39; #将要发送的文件添加为附件\n        recipientAddrs&#x3D;addrs[i] #接收人的邮箱地址\n        result &#x3D; os.path.exists(inputpath+i+&#39;.xlsx&#39;) #判断当前目录是否存在该文件\n        if result:\n            #存在就执行邮件\n            send_email(inputpath,smtpHost,port,sendAddr,password,recipientAddrs,\n            subject,content,attachfilename)\n            print ((&#39;发给 %s 的邮件执行成功&#39;) %(recipientAddrs))\n</code></pre></li>\n</ul>\n<p>这里也看到有使用126邮箱的smtp服务器：’smtp.126.com’<br><a class=\"link\"   href=\"https://blog.csdn.net/weixin_42350212/article/details/118751583\" >https://blog.csdn.net/weixin_42350212/article/details/118751583<i class=\"fas fa-external-link-alt\"></i></a><br>Python smtp发送邮件怎么设置抄送人<br><a class=\"link\"   href=\"https://www.cnblogs.com/shiyixirui/p/14692146.html\" >https://www.cnblogs.com/shiyixirui/p/14692146.html<i class=\"fas fa-external-link-alt\"></i></a></p>\n","text":" 邮件批量发送调用smtp.exmail.qq.com批量自动发送邮件注意文件路径，逗号分隔符，csv中不要有多余回车和空格import os import sys import csv import smtplib import pandas as pd import nump...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"自动化","slug":"自动化","count":4,"path":"api/tags/自动化.json"}],"toc":"","author":{"name":"弦好想断","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/avatar.jpg","link":"/","description":"处女座男生，热爱技术、吉他、旅行。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"python数据采集：selenium爬虫、自动化","uid":"8ca00045c38562501faacb57ba3b1700","slug":"python数据采集：selenium爬虫、自动化","date":"2021-05-05T02:34:57.000Z","updated":"2022-04-03T06:07:55.115Z","comments":true,"path":"api/articles/python数据采集：selenium爬虫、自动化.json","keywords":null,"cover":null,"text":"中文文档https:&#x2F;&#x2F;python-selenium-zh.readthedocs.io&#x2F;zh_CN&#x2F;latest&#x2F; 装包：pip install selenium下载chrome：https://www.google.cn/c...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"数据分析","slug":"数据分析","count":18,"path":"api/tags/数据分析.json"}],"author":{"name":"弦好想断","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/avatar.jpg","link":"/","description":"处女座男生，热爱技术、吉他、旅行。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"python办公自动化：文件和目录操作","uid":"3d3f9536d1b98ac2adb8f0a4ceb774df","slug":"python办公自动化：文件和目录操作","date":"2021-03-06T15:07:45.000Z","updated":"2022-04-03T06:09:17.212Z","comments":true,"path":"api/articles/python办公自动化：文件和目录操作.json","keywords":null,"cover":null,"text":"import os 创建目录结构 os.makedirs 可以递归的创建目录结构，比如os.makedirs(&#39;tmp&#x2F;python&#x2F;fileop&#39;,exist_ok&#x3D;True) 在当前工作目录下面创建 tmp目录，在tmp目录下面再...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"自动化","slug":"自动化","count":4,"path":"api/tags/自动化.json"}],"author":{"name":"弦好想断","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/zhang18340082962/image-rick@master/image-rick/avatar.jpg","link":"/","description":"处女座男生，热爱技术、吉他、旅行。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}