{"title":"python办公自动化：操作excel","uid":"7df2c9f61f81e14813ba612502b886c1","slug":"python办公自动化：操作excel","date":"2021-12-08T14:28:43.000Z","updated":"2022-05-29T15:35:39.998Z","comments":true,"path":"api/articles/python办公自动化：操作excel.json","keywords":null,"cover":null,"content":"<p>#python 使用 openpyxl 操作 excel</p>\n<ul>\n<li><p>openpyxl 最好用的 python 操作 excel 表格库，不接受反驳（想反驳自己去学其他的） </p>\n</li>\n<li><p>openpyxl 官网链接：<a href=\"https://openpyxl.readthedocs.io/en/stable/\">https://openpyxl.readthedocs.io/en/stable/</a></p>\n</li>\n<li><p><a href=\"https://www.zhihu.com/column/c_1261255815367487488\">https://www.zhihu.com/column/c_1261255815367487488</a></p>\n</li>\n<li><p>openpyxl 只支持【.xlsx / .xlsm / .xltx / .xltm】格式的文件</p>\n</li>\n<li><p>建议在jupyter-notebook里面操作</p>\n<h3 id=\"打开-Excel-表格并获取表格名称；通过-sheet-名称获取表格\"><a href=\"#打开-Excel-表格并获取表格名称；通过-sheet-名称获取表格\" class=\"headerlink\" title=\"打开 Excel 表格并获取表格名称；通过 sheet 名称获取表格\"></a>打开 Excel 表格并获取表格名称；通过 sheet 名称获取表格</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">from openpyxl import load_workbook \nworkbook &#x3D; load_workbook(filename &#x3D; &quot;test.xlsx&quot;) \nworkbook.sheetnames #打开 Excel 表格并获取表格名称\nsheet &#x3D; workbook[&quot;Sheet1&quot;] #通过 sheet 名称获取表格\nsheet.dimensions # 获取表格的尺寸大小(几行几列数据)</code></pre>\n<h3 id=\"获取表格内某个格子的数据\"><a href=\"#获取表格内某个格子的数据\" class=\"headerlink\" title=\"获取表格内某个格子的数据\"></a>获取表格内某个格子的数据</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">workbook &#x3D; load_workbook(filename &#x3D; &quot;test.xlsx&quot;) \nsheet &#x3D; workbook.active #打开激活的表格\nprint(sheet) \ncell1 &#x3D; sheet[&quot;A1&quot;] #获取 A1 格子的数据\ncell2 &#x3D; sheet[&quot;C11&quot;] \ncell3 &#x3D; sheet.cell(row &#x3D; 1,column &#x3D; 1) #通过指定行列号获取格子数据\ncell4 &#x3D; sheet.cell(row &#x3D; 11,column &#x3D; 3)\nprint(cell1.value, cell1.row, cell1.column, cell1.coordinate) \n#获取格子中的值、行数、列数、坐标；\nsheet[&quot;A&quot;] --- 获取 A 列的数据\nsheet[&quot;A:C&quot;] --- 获取 A,B,C 三列的数据\nsheet[5] --- 只获取第 5 行的数据\n# 获取 A1:C2 区域的值\ncell &#x3D; sheet[&quot;A1:C2&quot;] \nprint(cell) \nfor i in cell: \n  for j in i: \n    print(j.value)</code></pre></li>\n<li><p>.iter_rows()方式（类似pandas里面的iterrows）有.iter_rows()方式，肯定也会有.iter_cols()方式，只不过一个是按行读取，一个是按<br>列读取。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">workbook &#x3D; load_workbook(filename &#x3D; &quot;test.xlsx&quot;) \nsheet &#x3D; workbook.active \nprint(sheet) \n# 按行获取值\nfor i in sheet.iter_rows(min_row&#x3D;2, max_row&#x3D;5, min_col&#x3D;1, max_col&#x3D;2): #按行读取\n  for j in i: \n    print(j.value)\n# 按列获取值\nfor i in sheet.iter_cols(min_row&#x3D;2, max_row&#x3D;5, min_col&#x3D;1, max_col&#x3D;2): #按列读取\n  for j in i: \n    print(j.value)\nfor i in sheet.rows: #获取所有行\n  print(i)</code></pre>\n<h3 id=\"修改表格中的内容-向某个格子中写入内容并保存\"><a href=\"#修改表格中的内容-向某个格子中写入内容并保存\" class=\"headerlink\" title=\"修改表格中的内容: 向某个格子中写入内容并保存\"></a>修改表格中的内容: 向某个格子中写入内容并保存</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">workbook &#x3D; load_workbook(filename &#x3D; &quot;test.xlsx&quot;) \nsheet &#x3D; workbook.active \nprint(sheet)\nsheet[&quot;A1&quot;] &#x3D; &quot;哈喽&quot; \n# 这句代码也可以改为 cell &#x3D; sheet[&quot;A1&quot;] cell.value &#x3D; &quot;哈喽&quot; \nworkbook.save(filename &#x3D; &quot;哈喽.xlsx&quot;) \n&quot;&quot;&quot; \n注意：我们将“A1”单元格的数据改为了“哈喽”，并另存为了“哈喽.xlsx”文\n件。 如果我们保存的时候，不修改表名，相当于直接修改源文件；\n&quot;&quot;&quot;</code></pre></li>\n<li><p>.append()方式：会在表格已有的数据后面，按行插入数据(很有用)；</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">workbook &#x3D; load_workbook(filename &#x3D; &quot;test.xlsx&quot;) \nsheet &#x3D; workbook.active\nprint(sheet) \ndata &#x3D; [ \n[&quot;唐僧&quot;,&quot;男&quot;,&quot;180cm&quot;], \n[&quot;孙悟空&quot;,&quot;男&quot;,&quot;188cm&quot;], \n[&quot;猪八戒&quot;,&quot;男&quot;,&quot;175cm&quot;], \n[&quot;沙僧&quot;,&quot;男&quot;,&quot;176cm&quot;], \n] \nfor row in data: \n  sheet.append(row) \nworkbook.save(filename &#x3D; &quot;test.xlsx&quot;)</code></pre>\n<h3 id=\"使用-excel-函数公式-很有用\"><a href=\"#使用-excel-函数公式-很有用\" class=\"headerlink\" title=\"使用 excel 函数公式(很有用)\"></a>使用 excel 函数公式(很有用)</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">import openpyxl\nfrom openpyxl.utils import FORMULAE \nprint(FORMULAE)#python 支持写哪些“excel 函数公式”</code></pre>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># 这是我们在 excel 中输入的公式\n&#x3D;IF(RIGHT(C2,2)&#x3D;&quot;cm&quot;,C2,SUBSTITUTE(C2,&quot;m&quot;,&quot;&quot;)*100&amp;&quot;cm&quot;) \n# 那么，在 python 中怎么插入 excel 公式呢？\nworkbook &#x3D; load_workbook(filename &#x3D; &quot;test.xlsx&quot;) \nsheet &#x3D; workbook.active \nprint(sheet) \nsheet[&quot;D1&quot;] &#x3D; &quot;标准身高&quot; \nfor i in range(2,16): \n  sheet[&quot;D&#123;&#125;&quot;.format(i)] &#x3D; \n  &#39;&#x3D;IF(RIGHT(C&#123;&#125;,2)&#x3D;&quot;cm&quot;,C&#123;&#125;,SUBSTITUTE(C&#123;&#125;,&quot;m&quot;,&quot;&quot;)*100&amp;&quot;cm&quot;)&#39;.format(i,i,i) \nworkbook.save(filename &#x3D; &quot;test.xlsx&quot;)</code></pre>\n<h3 id=\"insert-cols-和-insert-rows-：插入空行和空列\"><a href=\"#insert-cols-和-insert-rows-：插入空行和空列\" class=\"headerlink\" title=\".insert_cols()和.insert_rows()：插入空行和空列\"></a>.insert_cols()和.insert_rows()：插入空行和空列</h3></li>\n<li><p>.insert_cols(idx=数字编号, amount=要插入的列数)，插入的位置是在 idx 列数的左侧插入；</p>\n</li>\n<li><p>.insert_rows(idx=数字编号, amount=要插入的行数)，插入的行数是在 idx 行数的下方插入；</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">workbook &#x3D; load_workbook(filename &#x3D; &quot;test.xlsx&quot;) \nsheet &#x3D; workbook.active \nprint(sheet) \nsheet.insert_cols(idx&#x3D;4,amount&#x3D;2) #从第4列开始插入2列\nsheet.insert_rows(idx&#x3D;5,amount&#x3D;4) #第5行开始插入2行\nworkbook.save(filename &#x3D; &quot;test.xlsx&quot;)</code></pre></li>\n</ul>\n<h3 id=\"delete-rows-和-delete-cols-：删除行和列\"><a href=\"#delete-rows-和-delete-cols-：删除行和列\" class=\"headerlink\" title=\".delete_rows()和.delete_cols()：删除行和列\"></a>.delete_rows()和.delete_cols()：删除行和列</h3><ul>\n<li>.delete_rows(idx=数字编号, amount=要删除的行数)</li>\n<li>.delete_cols(idx=数字编号, amount=要删除的列数)<pre class=\"line-numbers language-none\"><code class=\"language-none\">workbook &#x3D; load_workbook(filename &#x3D; &quot;test.xlsx&quot;) \nsheet &#x3D; workbook.active print(sheet) \n# 删除第一列，第一行\nsheet.delete_cols(idx&#x3D;1) \nsheet.delete_rows(idx&#x3D;1) \nworkbook.save(filename &#x3D; &quot;test.xlsx&quot;)</code></pre>\n<h3 id=\"move-range-：移动格子\"><a href=\"#move-range-：移动格子\" class=\"headerlink\" title=\".move_range()：移动格子\"></a>.move_range()：移动格子</h3></li>\n<li>.move_range(“数据区域”,rows=,cols=)：row正整数表示向下、负整数表示向上移动；cols正整数表示向右、负整数表示向左移动。</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sheet.move_range(&quot;C1:D4&quot;,rows&#x3D;2,cols&#x3D;-1)# 向左移动两列，向下移动两行</code></pre>\n<h3 id=\"create-sheet-：创建新的-sheet-表格\"><a href=\"#create-sheet-：创建新的-sheet-表格\" class=\"headerlink\" title=\".create_sheet()：创建新的 sheet 表格\"></a>.create_sheet()：创建新的 sheet 表格</h3><ul>\n<li>.create_sheet(“新的 sheet 名”)：创建一个新的 sheet 表；<pre class=\"line-numbers language-none\"><code class=\"language-none\">workbook &#x3D; load_workbook(filename &#x3D; &quot;test.xlsx&quot;) \nsheet &#x3D; workbook.active \nprint(sheet) \nworkbook.create_sheet(&quot;我是一个新的 sheet&quot;) \nprint(workbook.sheetnames) \nworkbook.save(filename &#x3D; &quot;test.xlsx&quot;)</code></pre></li>\n</ul>\n<h3 id=\"remove-：删除某个-sheet-表\"><a href=\"#remove-：删除某个-sheet-表\" class=\"headerlink\" title=\".remove()：删除某个 sheet 表\"></a>.remove()：删除某个 sheet 表</h3><ul>\n<li>.remove(“sheet 名”)：删除某个 sheet 表；<pre class=\"line-numbers language-none\"><code class=\"language-none\">workbook &#x3D; load_workbook(filename &#x3D; &quot;test.xlsx&quot;) \nsheet &#x3D; workbook.active \nprint(workbook.sheetnames) \n# 这个相当于激活的这个 sheet 表，激活状态下，才可以操作；\nsheet &#x3D; workbook[&#39;我是一个新的 sheet&#39;] \nprint(sheet) \nworkbook.remove(sheet) \nprint(workbook.sheetnames) \nworkbook.save(filename &#x3D; &quot;test.xlsx&quot;)</code></pre></li>\n</ul>\n<h3 id=\"copy-worksheet-：复制一个-sheet-表到另外一张-excel-表\"><a href=\"#copy-worksheet-：复制一个-sheet-表到另外一张-excel-表\" class=\"headerlink\" title=\".copy_worksheet()：复制一个 sheet 表到另外一张 excel 表\"></a>.copy_worksheet()：复制一个 sheet 表到另外一张 excel 表</h3><ul>\n<li>这个操作的实质，就是复制某个 excel 表中的 sheet 表，然后将文件存储到另外一张excel 表中<pre class=\"line-numbers language-none\"><code class=\"language-none\">workbook &#x3D; load_workbook(filename &#x3D; &quot;a.xlsx&quot;) \nsheet &#x3D; workbook.active \nprint(&quot;a.xlsx 中有这几个 sheet 表&quot;,workbook.sheetnames) \nsheet &#x3D; workbook[&#39;姓名&#39;] \nworkbook.copy_worksheet(sheet) \nworkbook.save(filename &#x3D; &quot;test.xlsx&quot;)</code></pre></li>\n</ul>\n<h3 id=\"sheet-title：修改-sheet-表的名称\"><a href=\"#sheet-title：修改-sheet-表的名称\" class=\"headerlink\" title=\"sheet.title：修改 sheet 表的名称\"></a>sheet.title：修改 sheet 表的名称</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">workbook &#x3D; load_workbook(filename &#x3D; &quot;a.xlsx&quot;) \nsheet &#x3D; workbook.active \nprint(sheet) \nsheet.title &#x3D; &quot;我是修改后的 sheet 名&quot; \nprint(sheet)</code></pre>\n\n<h3 id=\"创建新的-excel-表格文件\"><a href=\"#创建新的-excel-表格文件\" class=\"headerlink\" title=\"创建新的 excel 表格文件\"></a>创建新的 excel 表格文件</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">from openpyxl import Workbook \nworkbook &#x3D; Workbook() \nsheet &#x3D; workbook.active \nsheet.title &#x3D; &quot;表格 1&quot; \nworkbook.save(filename &#x3D; &quot;新建的 excel 表格&quot;)</code></pre>\n\n<h3 id=\"sheet-freeze-panes：冻结窗口\"><a href=\"#sheet-freeze-panes：冻结窗口\" class=\"headerlink\" title=\"sheet.freeze_panes：冻结窗口\"></a>sheet.freeze_panes：冻结窗口</h3><ul>\n<li>.freeze_panes = “单元格”<pre class=\"line-numbers language-none\"><code class=\"language-none\">workbook &#x3D; load_workbook(filename &#x3D; &quot;花园.xlsx&quot;) \nsheet &#x3D; workbook.active \nprint(sheet) \nsheet.freeze_panes &#x3D; &quot;C3&quot; \nworkbook.save(filename &#x3D; &quot;花园.xlsx&quot;) \n&quot;&quot;&quot; \n冻结窗口以后，你可以打开源文件，进行检验；\n&quot;&quot;&quot;</code></pre></li>\n</ul>\n<h3 id=\"sheet-auto-filter-ref：给表格添加“筛选器”\"><a href=\"#sheet-auto-filter-ref：给表格添加“筛选器”\" class=\"headerlink\" title=\"sheet.auto_filter.ref：给表格添加“筛选器”\"></a>sheet.auto_filter.ref：给表格添加“筛选器”</h3><ul>\n<li>.auto_filter.ref = sheet.dimension 给所有字段添加筛选器；</li>\n<li>.auto_filter.ref = “A1” 给 A1 这个格子添加“筛选器”，就是给第一列添加“筛选器”；<pre class=\"line-numbers language-none\"><code class=\"language-none\">workbook &#x3D; load_workbook(filename &#x3D; &quot;花园.xlsx&quot;) \nsheet &#x3D; workbook.active \nprint(sheet) \nsheet.auto_filter.ref &#x3D; sheet[&quot;A1&quot;] \nworkbook.save(filename &#x3D; &quot;花园.xlsx&quot;)</code></pre></li>\n</ul>\n<h2 id=\"批量调整字体和样式\"><a href=\"#批量调整字体和样式\" class=\"headerlink\" title=\"批量调整字体和样式\"></a>批量调整字体和样式</h2><h3 id=\"1、修改字体样式\"><a href=\"#1、修改字体样式\" class=\"headerlink\" title=\"1、修改字体样式\"></a>1、修改字体样式</h3><ul>\n<li>Font(name=字体名称,size=字体大小,bold=是否加粗,italic=是否斜体,color=字体颜色)<pre class=\"line-numbers language-none\"><code class=\"language-none\">from openpyxl.styles import Font \nfrom openpyxl import load_workbook \nworkbook &#x3D; load_workbook(filename&#x3D;&quot;花园.xlsx&quot;) \nsheet &#x3D; workbook.active \ncell &#x3D; sheet[&quot;A1&quot;] \nfont &#x3D; Font(name&#x3D;&quot;微软雅黑&quot;,size&#x3D;20,bold&#x3D;True,italic&#x3D;True,color&#x3D;&quot;FF0000&quot;) \ncell.font &#x3D; font\nworkbook.save(filename &#x3D; &quot;花园.xlsx&quot;) \n&quot;&quot;&quot; \n这个 color 是 RGB 的 16 进制表示，自己下去百度学习；\n&quot;&quot;&quot;</code></pre></li>\n</ul>\n<h3 id=\"2、获取表格中格子的字体样式\"><a href=\"#2、获取表格中格子的字体样式\" class=\"headerlink\" title=\"2、获取表格中格子的字体样式\"></a>2、获取表格中格子的字体样式</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">from openpyxl.styles import Font \nfrom openpyxl import load_workbook \nworkbook &#x3D; load_workbook(filename&#x3D;&quot;花园.xlsx&quot;) \nsheet &#x3D; workbook.active \ncell &#x3D; sheet[&quot;A2&quot;] \nfont &#x3D; cell.font \nprint(font.name, font.size, font.bold, font.italic, font.color)</code></pre>\n\n<h3 id=\"3、设置对齐样式\"><a href=\"#3、设置对齐样式\" class=\"headerlink\" title=\"3、设置对齐样式\"></a>3、设置对齐样式</h3><ul>\n<li><p>Alignment(horizontal=水平对齐模式,vertical=垂直对齐模式,text_rotation=旋转角<br>度,wrap_text=是否自动换行)</p>\n</li>\n<li><p>水平对齐：‘distributed’，‘justify’，‘center’，‘leftfill’， ‘centerContinuous’，‘right，<br>‘general’；</p>\n</li>\n<li><p>垂直对齐：‘bottom’，‘distributed’，‘justify’，‘center’，‘top’；</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">from openpyxl.styles import Alignment \nfrom openpyxl import load_workbook \nworkbook &#x3D; load_workbook(filename&#x3D;&quot;花园.xlsx&quot;) \nsheet &#x3D; workbook.active \ncell &#x3D; sheet[&quot;A1&quot;]\nalignment &#x3D; Alignment(horizontal&#x3D;&quot;center&quot;,vertical&#x3D;&quot;center&quot;,text_rotation&#x3D;45,wrap_text&#x3D;True) \ncell.alignment &#x3D; alignment \nworkbook.save(filename &#x3D; &quot;花园.xlsx&quot;)</code></pre>\n<h3 id=\"4、设置边框样式\"><a href=\"#4、设置边框样式\" class=\"headerlink\" title=\"4、设置边框样式\"></a>4、设置边框样式</h3></li>\n<li><p>Side(style=边线样式，color=边线颜色)</p>\n</li>\n<li><p>Border(left=左边线样式，right=右边线样式，top=上边线样式，bottom=下边线样式)</p>\n</li>\n<li><p>style 参数的种类： ‘double, ‘mediumDashDotDot’, ‘slantDashDot’, ‘dashDotDot’,’dotted’,’hair’,<br>‘mediumDashed, ‘dashed’, ‘dashDot’, ‘thin’, ‘mediumDashDot’,’medium’, ‘thick’</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">from openpyxl.styles import Side,Border \nfrom openpyxl import load_workbook \nworkbook &#x3D; load_workbook(filename&#x3D;&quot;花园.xlsx&quot;) \nsheet &#x3D; workbook.active \ncell &#x3D; sheet[&quot;D6&quot;]\nside1 &#x3D; Side(style&#x3D;&quot;thin&quot;,color&#x3D;&quot;FF0000&quot;) \nside2 &#x3D; Side(style&#x3D;&quot;thick&quot;,color&#x3D;&quot;FFFF0000&quot;) \nborder &#x3D; Border(left&#x3D;side1,right&#x3D;side1,top&#x3D;side2,bottom&#x3D;side2) \ncell.border &#x3D; border \nworkbook.save(filename &#x3D; &quot;花园.xlsx&quot;)</code></pre></li>\n</ul>\n<h3 id=\"5、设置填充样式\"><a href=\"#5、设置填充样式\" class=\"headerlink\" title=\"5、设置填充样式\"></a>5、设置填充样式</h3><ul>\n<li><p>PatternFill(fill_type=填充样式，fgColor=填充颜色）</p>\n</li>\n<li><p>GradientFill(stop=(渐变颜色 1，渐变颜色 2……))</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">from openpyxl.styles import PatternFill,GradientFill \nfrom openpyxl import load_workbook \nworkbook &#x3D; load_workbook(filename&#x3D;&quot;花园.xlsx&quot;) \nsheet &#x3D; workbook.active \ncell_b9 &#x3D; sheet[&quot;B9&quot;] \npattern_fill &#x3D; PatternFill(fill_type&#x3D;&quot;solid&quot;,fgColor&#x3D;&quot;99ccff&quot;) \ncell_b9.fill &#x3D; pattern_fill \ncell_b10 &#x3D; sheet[&quot;B10&quot;]\ngradient_fill &#x3D; GradientFill(stop&#x3D;(&quot;FFFFFF&quot;,&quot;99ccff&quot;,&quot;000000&quot;)) \ncell_b10.fill &#x3D; gradient_fill \nworkbook.save(filename &#x3D; &quot;花园.xlsx&quot;)</code></pre>\n<h3 id=\"6、设置行高和列宽\"><a href=\"#6、设置行高和列宽\" class=\"headerlink\" title=\"6、设置行高和列宽\"></a>6、设置行高和列宽</h3></li>\n<li><p>.row_dimensions[行编号].height = 行高</p>\n</li>\n<li><p>.column_dimensions[列编号].width = 列宽</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">workbook &#x3D; load_workbook(filename&#x3D;&quot;花园.xlsx&quot;) \nsheet &#x3D; workbook.active \n# 设置第 1 行的高度\nsheet.row_dimensions[1].height &#x3D; 50 #将整个表的行高设置为 50\n# 设置 B 列的宽度\nsheet.column_dimensions[&quot;B&quot;].width &#x3D; 20 #列宽设置为 30；\nworkbook.save(filename &#x3D; &quot;花园.xlsx&quot;)</code></pre></li>\n</ul>\n<h3 id=\"7、合并单元格\"><a href=\"#7、合并单元格\" class=\"headerlink\" title=\"7、合并单元格\"></a>7、合并单元格</h3><ul>\n<li>.merge_cells(待合并的格子编号)</li>\n<li>.merge_cells(start_row=起始行号，start_column=起始列号，end_row=结束行号，<br>end_column=结束列号)<pre class=\"line-numbers language-none\"><code class=\"language-none\">workbook &#x3D; load_workbook(filename&#x3D;&quot;花园.xlsx&quot;)\nsheet &#x3D; workbook.active sheet.merge_cells(&quot;C1:D2&quot;) \nsheet.merge_cells(start_row&#x3D;7,start_column&#x3D;1,end_row&#x3D;8,end_column&#x3D;3) \nworkbook.save(filename &#x3D; &quot;花园.xlsx&quot;)</code></pre>\n当然，也有“取消合并单元格”，用法一致。</li>\n<li>.unmerge_cells(待合并的格子编号)</li>\n<li>.unmerge_cells(start_row=起始行号，start_column=起始列号，end_row=结束行号，<br>end_column=结束列号)</li>\n</ul>\n","text":"#python 使用 openpyxl 操作 excel openpyxl 最好用的 python 操作 excel 表格库，不接受反驳（想反驳自己去学其他的） openpyxl 官网链接：https://openpyxl.readthedocs.io/en/stable/ ht...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"python","slug":"python","count":18,"path":"api/categories/python.json"}],"tags":[{"name":"自动化","slug":"自动化","count":5,"path":"api/tags/自动化.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%93%E5%BC%80-Excel-%E8%A1%A8%E6%A0%BC%E5%B9%B6%E8%8E%B7%E5%8F%96%E8%A1%A8%E6%A0%BC%E5%90%8D%E7%A7%B0%EF%BC%9B%E9%80%9A%E8%BF%87-sheet-%E5%90%8D%E7%A7%B0%E8%8E%B7%E5%8F%96%E8%A1%A8%E6%A0%BC\"><span class=\"toc-text\">打开 Excel 表格并获取表格名称；通过 sheet 名称获取表格</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E8%A1%A8%E6%A0%BC%E5%86%85%E6%9F%90%E4%B8%AA%E6%A0%BC%E5%AD%90%E7%9A%84%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">获取表格内某个格子的数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E8%A1%A8%E6%A0%BC%E4%B8%AD%E7%9A%84%E5%86%85%E5%AE%B9-%E5%90%91%E6%9F%90%E4%B8%AA%E6%A0%BC%E5%AD%90%E4%B8%AD%E5%86%99%E5%85%A5%E5%86%85%E5%AE%B9%E5%B9%B6%E4%BF%9D%E5%AD%98\"><span class=\"toc-text\">修改表格中的内容: 向某个格子中写入内容并保存</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-excel-%E5%87%BD%E6%95%B0%E5%85%AC%E5%BC%8F-%E5%BE%88%E6%9C%89%E7%94%A8\"><span class=\"toc-text\">使用 excel 函数公式(很有用)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#insert-cols-%E5%92%8C-insert-rows-%EF%BC%9A%E6%8F%92%E5%85%A5%E7%A9%BA%E8%A1%8C%E5%92%8C%E7%A9%BA%E5%88%97\"><span class=\"toc-text\">.insert_cols()和.insert_rows()：插入空行和空列</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#delete-rows-%E5%92%8C-delete-cols-%EF%BC%9A%E5%88%A0%E9%99%A4%E8%A1%8C%E5%92%8C%E5%88%97\"><span class=\"toc-text\">.delete_rows()和.delete_cols()：删除行和列</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#move-range-%EF%BC%9A%E7%A7%BB%E5%8A%A8%E6%A0%BC%E5%AD%90\"><span class=\"toc-text\">.move_range()：移动格子</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#create-sheet-%EF%BC%9A%E5%88%9B%E5%BB%BA%E6%96%B0%E7%9A%84-sheet-%E8%A1%A8%E6%A0%BC\"><span class=\"toc-text\">.create_sheet()：创建新的 sheet 表格</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#remove-%EF%BC%9A%E5%88%A0%E9%99%A4%E6%9F%90%E4%B8%AA-sheet-%E8%A1%A8\"><span class=\"toc-text\">.remove()：删除某个 sheet 表</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#copy-worksheet-%EF%BC%9A%E5%A4%8D%E5%88%B6%E4%B8%80%E4%B8%AA-sheet-%E8%A1%A8%E5%88%B0%E5%8F%A6%E5%A4%96%E4%B8%80%E5%BC%A0-excel-%E8%A1%A8\"><span class=\"toc-text\">.copy_worksheet()：复制一个 sheet 表到另外一张 excel 表</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#sheet-title%EF%BC%9A%E4%BF%AE%E6%94%B9-sheet-%E8%A1%A8%E7%9A%84%E5%90%8D%E7%A7%B0\"><span class=\"toc-text\">sheet.title：修改 sheet 表的名称</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%96%B0%E7%9A%84-excel-%E8%A1%A8%E6%A0%BC%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">创建新的 excel 表格文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#sheet-freeze-panes%EF%BC%9A%E5%86%BB%E7%BB%93%E7%AA%97%E5%8F%A3\"><span class=\"toc-text\">sheet.freeze_panes：冻结窗口</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#sheet-auto-filter-ref%EF%BC%9A%E7%BB%99%E8%A1%A8%E6%A0%BC%E6%B7%BB%E5%8A%A0%E2%80%9C%E7%AD%9B%E9%80%89%E5%99%A8%E2%80%9D\"><span class=\"toc-text\">sheet.auto_filter.ref：给表格添加“筛选器”</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%89%B9%E9%87%8F%E8%B0%83%E6%95%B4%E5%AD%97%E4%BD%93%E5%92%8C%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">批量调整字体和样式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E4%BF%AE%E6%94%B9%E5%AD%97%E4%BD%93%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">1、修改字体样式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E8%8E%B7%E5%8F%96%E8%A1%A8%E6%A0%BC%E4%B8%AD%E6%A0%BC%E5%AD%90%E7%9A%84%E5%AD%97%E4%BD%93%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">2、获取表格中格子的字体样式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81%E8%AE%BE%E7%BD%AE%E5%AF%B9%E9%BD%90%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">3、设置对齐样式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4%E3%80%81%E8%AE%BE%E7%BD%AE%E8%BE%B9%E6%A1%86%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">4、设置边框样式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5%E3%80%81%E8%AE%BE%E7%BD%AE%E5%A1%AB%E5%85%85%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">5、设置填充样式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6%E3%80%81%E8%AE%BE%E7%BD%AE%E8%A1%8C%E9%AB%98%E5%92%8C%E5%88%97%E5%AE%BD\"><span class=\"toc-text\">6、设置行高和列宽</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7%E3%80%81%E5%90%88%E5%B9%B6%E5%8D%95%E5%85%83%E6%A0%BC\"><span class=\"toc-text\">7、合并单元格</span></a></li></ol>","author":{"name":"弦好想断","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"处女座男生，热爱技术、吉他、旅行。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"mysql_tips","uid":"a556aaed3b3be5cc651b39ff50e6148d","slug":"mysql-tips","date":"2021-12-13T08:35:58.000Z","updated":"2022-05-29T15:35:25.998Z","comments":true,"path":"api/articles/mysql-tips.json","keywords":null,"cover":null,"text":" 四个在工作后才知道的SQL密技 https://zhuanlan.zhihu.com/p/412878736 mysql基础https://blog.csdn.net/weixin_45108087/article/details/102766281 MYSQL中的COLLAT...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"sql","slug":"sql","count":5,"path":"api/categories/sql.json"}],"tags":[{"name":"数据分析","slug":"数据分析","count":17,"path":"api/tags/数据分析.json"}],"author":{"name":"弦好想断","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"处女座男生，热爱技术、吉他、旅行。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"python中requests使用中文乱码的解决方案","uid":"8a288770ed82450aa993ccbeacfd0367","slug":"requests乱码问题解决","date":"2021-12-02T15:30:02.000Z","updated":"2022-05-29T15:36:46.176Z","comments":true,"path":"api/articles/requests乱码问题解决.json","keywords":null,"cover":null,"text":" 中文乱码处理import requests url &#x3D; &quot;http:&#x2F;&#x2F;www.baidu.com&quot; r &#x3D; requests.get(url) # 自动选择合适的编码方式 r.encoding &#x3D; r.ap...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"python","slug":"python","count":18,"path":"api/categories/python.json"}],"tags":[{"name":"数据分析","slug":"数据分析","count":17,"path":"api/tags/数据分析.json"}],"author":{"name":"弦好想断","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"处女座男生，热爱技术、吉他、旅行。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}